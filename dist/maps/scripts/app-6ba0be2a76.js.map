{"version":3,"sources":["scripts/app-6ba0be2a76.js"],"names":["angular","module","acmeNavbar","directive","restrict","templateUrl","controller","controllerAs","bindToController","includeFooter","NavbarController","moment","vm","this","relativeDate","creationDate","fromNow","$inject","MalarkeyController","$log","getFoodNamesOnly","activate","getFoodNamesList","then","info","data","foodnameslist","primarySearch","$document","$timeout","Paginator","linkFunc","scope","el","attr","initializeSearch","element","querySelector","addClass","removeClass","timer","searchterm","setPage","page","length","pager","totalPages","totalResults","getPaginator","items","searchresultsarray","slice","startIndex","endIndex","handleKeyupEvent","watcher","$watch","forEach","searchResult","name","split","replace","toLowerCase","charAt","toUpperCase","$on","cancel","link","acmeMalarkey","malarkey","typist","typeSpeed","deleteSpeed","pauseDelay","loop","postfix","extraValues","value","type","pause","list","item","foodName","template","_","totalItems","currentPage","pageSize","startPage","endPage","Math","ceil","min","pages","range","service","factory","answerService","localStorageService","$q","yesNoMaybePromise","deferred","defer","isSupported","clearAll","set","theAnswer","resolve","log","reject","promise","yesNoMaybeAlgorithm","$window","constant","apiUrl","apiKey","debug","getSearchResults","$http","ENV_VARS","getSearchResultsList","returnSearchResultsList","response","getSearchResultsListFail","err","error","get","ndbApiUrl","ndbApiKey","getNutritionalData","getSearchResultNutritionData","id","returnNutritionalData","getNutritionalDataFail","limit","returnFoodNamesList","getFoodNamesFail","SearchController","$scope","$location","$rootScope","errors","goToSearchResult","foodNutritionData","answer","path","MainController","classAnimation","Error404Controller","ContactController","processContactForm","returnSendSuccessful","sendFail","post","AnswerController","stored","yesNoMaybe","nutrientGroups","proximates","minerals","vitamins","lipids","other","aminoAcids","getLocalStorageData","report","food","nutrients","nutrient","group","runBlock","run","routeConfig","$routeProvider","when","otherwise","config","$logProvider","$httpProvider","localStorageServiceProvider","debugEnabled","defaults","useXDomain","headers","common","setStorageType","$templateCache","put"],"mappings":"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","file":"scripts/app-6ba0be2a76.js","sourcesContent":["(function() {\n  'use strict';\n  // TODO:: Learn how to deploy this damn thing....(heroku & codeship)\n  // TODO:: Buy domain for this site and configure to heroku.\n  // TODO:: HTTPS\n  // TODO:: Add Google Analytics and Adsense - https://www.google.com/adsense/start/\n  // TODO:: Develop algorithm to dictate if given food is good or bad for you.\n  // TODO:: hookup contact form.\n  // TODO:: write spec tests for all services, controllers and factories.\n  // TODO:: Page explaining the algorithm logic behind Foodle.\n  // TODO:: Make a list of beta testers and send invites.\n  // TODO:: 'variable-ize' css colors\n  // TODO:: Seek IP patent for algorithm once past beta testing.\n  // TODO:: Consider switching Food Data provider to these guys - https://www.labelinsight.com/developers/pricing\n\n\n  angular\n    .module('commonSenseDietApp', ['ngCookies', 'ngTouch', 'ngSanitize', 'ngMessages', 'ngAria', 'ngResource', 'ngRoute', 'envconfig.module', 'underscore', 'LocalStorageModule']);\n\n})();\n\n(function() {\n  'use strict';\n  // This is a Directive...At a high level, directives are markers on a DOM element (such as an attribute, element name, comment or CSS class) that tell AngularJS's HTML compiler ($compile) to attach a specified behavior to that DOM element as well as default template behavior. See index.html to see the element where this directive is anchored. What does it mean to \"compile\" an HTML template? For AngularJS, \"compilation\" means attaching directives to the HTML to make it interactive. The reason we use the term \"compile\".\n\n  // To register a directive, you use the module.directive API.\n  angular\n    .module('commonSenseDietApp')\n    .directive('acmeNavbar', acmeNavbar);\n\n  /** @ngInject */\n  // Here we declare and define the Malarkey directive. malarkey is a library that came with the gulp generator. When you create a directive, it is restricted to attribute and elements only by default. In order to create directives that are triggered by class name, you need to use the restrict option. (restrict : E)\n  function acmeNavbar() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/views/partials/navbar.html',\n      controller: 'NavbarController',\n      controllerAs: 'vm',\n      bindToController: true\n    };\n\n    return directive;\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('commonSenseDietApp')\n    .directive('includeFooter', includeFooter);\n\n  /** @ngInject */\n  function includeFooter() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/views/partials/footer.html',\n      // controller: FooterController,\n      controllerAs: 'vm',\n      bindToController: true\n    };\n\n    return directive;\n  }\n})();\n\n(function() {\n  'use strict';\n\n  // Controllers are \"classes\" or \"constructor functions\" that are responsible for providing the application behavior that supports the declarative markup in the template. The recommended way of declaring Controllers is using the array notation. Unlike services, there can be many instances of the same type of controller in an application. Moreover, additional dependencies are made available to Controllers like $scope.\n    angular\n      .module('commonSenseDietApp')\n      .controller('NavbarController', NavbarController)\n\n      /** @ngInject */\n      function NavbarController(moment) {\n        // Using this pattern allows us to maintain a reference to the THIS scope as a means to 'reveal' public properties and methods for use as the 'view model'. It also has the added benefit of providing a lexical binding which can be referenced inside of closures.\n        var vm = this;\n\n        // \"vm.creation\" is avaible by directive option \"bindToController: true\"\n        vm.relativeDate = moment(vm.creationDate).fromNow();\n      }\n})();\n\n(function() {\n  'use strict';\n\n  // Controllers are \"classes\" or \"constructor functions\" that are responsible for providing the application behavior that supports the declarative markup in the template. The recommended way of declaring Controllers is using the array notation. Unlike services, there can be many instances of the same type of controller in an application. Moreover, additional dependencies are made available to Controllers like $scope.\n    angular\n      .module('commonSenseDietApp')\n      .controller('MalarkeyController', MalarkeyController)\n\n\n      /** @ngInject */\n      function MalarkeyController($log, getFoodNamesOnly) {\n        // Using this pattern allows us to maintain a reference to the THIS scope as a means to 'reveal' public properties and methods for use as the 'view model'. It also has the added benefit of providing a lexical binding which can be referenced inside of closures.\n        var vm = this;\n\n        vm.foodnameslist = [];\n\n        activate();\n\n        function activate() {\n          return getFoodNamesList().then(function() {\n            $log.info('Activated Foods List Typer');\n          });\n        }\n\n        // I have no idea how this directive has access to getFoodNamesOnly.service.js..BUT I suspect it has to do with the fact that both this directive and the service are registered to the same angular module.('commonSenseDietApp'). i.e. \"The service factory function generates the single object or function that represents the service to the rest of the application.\" - https://docs.angularjs.org/guide/services\n        function getFoodNamesList() {\n          return getFoodNamesOnly.getFoodNamesList(20).then(function(data) {\n            vm.foodnameslist = data;\n\n            return vm.foodnameslist ;\n          });\n        }\n      }\n\n})();\n\n(function() {\n  'use strict';\n\n  // This is a Directive...At a high level, directives are markers on a DOM element (such as an attribute, element name, comment or CSS class) that tell AngularJS's HTML compiler ($compile) to attach a specified behavior to that DOM element. See home.html to see the element where this directive is anchored. What does it mean to \"compile\" an HTML template? For AngularJS, \"compilation\" means attaching directives to the HTML to make it interactive.\n  angular\n    .module('commonSenseDietApp')\n    .directive('primarySearch', primarySearch);\n\n  /** @ngInject */\n  // Here we declare and define the Malarkey directive. Malarkey is an external non-angular JS library. It's set as a constant in index.constants.js. Installed via Bower.\n  function primarySearch($log, $document, $timeout, Paginator) {\n\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/views/partials/primary-search.html',\n      link: linkFunc,\n      controller: 'SearchController',\n      controllerAs: 'vm',\n      bindToController: true // because the scope is isolated\n    };\n\n    return directive;\n\n    // Here we use the malarkey library to set typespeed animation. We also pass in el, attr,(not clear where these are defined yet), the scope object native to Angular, and vm wich is 'controller-as' syntax for the MalarkeyContoller defined in the directive.\n    function linkFunc(scope, el, attr, vm) {\n      // This event handler is called by the ngKeyup directive in home.html and primary-search.html.\n      vm.handleKeyupEvent = function() {\n        // Wait until search input value is defined and longer than 4 characters before initiating API search.\n        if(vm.searchterm && vm.searchterm.length >= 4) {\n          initializeSearch();\n        }\n      };\n\n      var timer;\n      vm.pager = {};\n      vm.setPage = setPage;\n      vm.totalResults = 0;\n\n      function initializeSearch() {\n\n        // Apply jqLite events to DOM selectors. Places the searchbar in top left corner of page on keyup then init API service methods and employ our Paginator service.\n        angular.element($document[0].querySelector('#wrapper')).addClass('not-visible');\n        angular.element($document[0].querySelector('#move-searchbar')).removeClass('searchbar-container').addClass('global-searchbar-container');\n        angular.element($document[0].querySelector('.home-buttons')).addClass('not-visible');\n        angular.element($document[0].querySelector('.search-results-container')).removeClass('not-visible');\n        angular.element($document[0].querySelector('.navbar')).addClass('lightgrey-bg').addClass('bottom-border-grey');\n        angular.element($document[0].querySelector('.navbar ul li p')).addClass('lightgrey-bg').addClass('not-visible');\n        angular.element($document[0].querySelector('.search-icon')).removeClass('not-visible');\n\n        // It takes a split second for the view model to update with the entire input value thus the timeout below..must refactor this! Research onkeyup \"view-model\" updates.\n        timer = $timeout(function() {\n          return vm.activate(vm.searchterm).then(function() {\n            $log.info('Polling API');\n          });\n        }, 500);\n\n      }\n\n      // Watch for the API query data array to come in. Once defined, format it and make it available to the 'view-model'.\n      var watcher = scope.$watch('vm.searchresultsarray', function() {\n        // vm.searchresultsarray will be undefined until the $destroy event below.\n        if(!vm.searchresultsarray) {\n          vm.searchresultsarray = [];\n        }\n\n        // TODO:: employ smarter string filtering..maybe lib or native helper\n        angular.forEach(vm.searchresultsarray, function(searchResult) {\n          if (searchResult.name) {\n            searchResult.name = searchResult.name.split(/UPC:|gtin:/g)[0].replace(/\\,/g,\"\").toLowerCase();\n\n            searchResult.name = searchResult.name.charAt(0).toUpperCase() + searchResult.name.slice(1);\n          }\n        });\n\n        // Invoke pagination via \"setPage()\" function below. Once search results are in, display search results via Paginator service.\n        if (vm.searchresultsarray.length > 0) {\n          vm.setPage(1, vm.searchresultsarray.length);\n        }\n      });\n\n      // Paginate search results using our Paginator.service.js and then render to DOM.\n      function setPage(page, length) {\n        if(page < 1 || page > vm.pager.totalPages) {\n          return;\n        }\n        // total number of search results\n        vm.totalResults = length;\n        // current page\n        vm.page = page;\n        // get pager object from service\n        vm.pager = Paginator.getPaginator(length, page);\n        // get current page of items\n        vm.items =  vm.searchresultsarray.slice(vm.pager.startIndex, vm.pager.endIndex + 1);\n      }\n\n      // Always be sure to cancel out your $timeouts at the $destroy event.\n      scope.$on('$destroy', function () {\n        watcher();\n        $timeout.cancel(timer);\n      });\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  // This is a Directive...At a high level, directives are markers on a DOM element (such as an attribute, element name, comment or CSS class) that tell AngularJS's HTML compiler ($compile) to attach a specified behavior to that DOM element. See home.html to see the element where this directive is anchored. What does it mean to \"compile\" an HTML template? For AngularJS, \"compilation\" means attaching directives to the HTML to make it interactive.\n  angular\n    .module('commonSenseDietApp')\n    .directive('acmeMalarkey', acmeMalarkey);\n\n  /** @ngInject */\n  // Here we declare and define the Malarkey directive. malarkey is a library that came with the gulp generator. I'm not exactly sure what it does yet but it's passed here to acmeMalarkey as an argument and used later on in linkFunc(). When you create a directive, it is restricted to attribute and elements only by default. In order to create directives that are triggered by class name, you need to use the restrict option. (restrict : E)\n  function acmeMalarkey(malarkey) {\n    var directive = {\n      restrict: 'E',\n      scope: {\n        extraValues: '='\n      },\n      template: '&nbsp;',\n      link: linkFunc,\n      controller: 'MalarkeyController',\n      controllerAs: 'vm',\n      bindToController: true // because the scope is isolated\n    };\n\n    return directive;\n\n    // Here we use the malarkey library to set typespeed animation. We also pass in el, attr,(not clear where these are defined yet), the scope object native to Angular, and vm wich is 'controller-as' syntax for the MalarkeyContoller defined in the directive.\n    function linkFunc(scope, el, attr, vm) {\n      var typist = malarkey(el[0], {\n        typeSpeed: 80,\n        deleteSpeed: 60,\n        pauseDelay: 4000,\n        loop: true,\n        postfix: ' '\n      });\n\n      // Here I believe we are setting our directive to a class selector as opposed to a template.\n      el.addClass('acme-malarkey');\n\n      // This iterates over extra food values specified in the directive as an attribute.\n      angular.forEach(vm.extraValues, function(value) {\n        typist.type(value).pause().delete();\n      });\n\n      // vm.foodnameslist is an array defined below in the MalarkeyController. Much like the forEach above, this one loops through the foodnameslist array (the data returned from our API service) and calls typist to animate the typing of each item on the home page. Notice it is not called until the $destroy event.\n      var watcher = scope.$watch('vm.foodnameslist', function() {\n        // vm.contributors will be undefined until $destroy.\n        if(!vm.foodnameslist.list) {\n          vm.foodnameslist.list = [];\n        }\n\n        angular.forEach(vm.foodnameslist.list.item, function(foodName) {\n          // TODO:: employ smarter string filtering..maybe lib or native helper\n          foodName = foodName.name.split('UPC')[0].replace(/\\,/g,\"\").toLowerCase();\n\n          typist.type(foodName).pause().delete();\n        });\n      });\n\n      // This calls the watcher() above when the destroy event is triggered. Removes the current scope (and all of its children) from the parent scope. Removal implies that calls to $digest() will no longer propagate to the current scope and its children. Removal also implies that the current scope is eligible for garbage collection.The $destroy() is usually used by directives such as ngRepeat for managing the unrolling of the loop. Just before a scope is destroyed, a $destroy event is broadcasted on this scope. Application code can register a $destroy event handler that will give it a chance to perform any necessary cleanup.\n      scope.$on('$destroy', function () {\n        watcher();\n      });\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('commonSenseDietApp')\n    .factory('Paginator', Paginator);\n\n  /** @ngInject */\n  // Angular services are substitutable objects that are wired together using dependency injection(DI). You can use services to organize and share code across your app via global templating.\n  function Paginator(_) {\n    // Service definition\n    var service = {\n      getPaginator: getPaginator\n    };\n\n    return service;\n\n    function getPaginator(totalItems, currentPage, pageSize) {\n\n      // Default to first page\n      currentPage = currentPage || 1;\n\n      // Default page size is 10\n      pageSize = pageSize || 10;\n\n      // Calculate total pages and instatiate empty variables.\n      var totalPages = Math.ceil(totalItems/pageSize);\n      var startPage;\n      var endPage;\n\n      if (totalPages <= 10 ) {\n        // Only show less than or exactly 10 if there are only 10 pages needed.\n        startPage = 1;\n        endPage = totalPages;\n      } else {\n        // Show more than 10 pages so calculate start and end pages\n        if (currentPage <= 6) {\n          startPage = 1;\n          endPage = 10;\n        } else if(currentPage + 4 >= totalPages) {\n          startPage = totalPages - 9;\n          endPage = totalPages;\n        } else {\n          startPage = currentPage - 5;\n          endPage = currentPage + 4;\n        }\n      }\n\n      // Calculate start and end item indexes\n      var startIndex = (currentPage - 1) * pageSize;\n      var endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\n\n      // Create an array of pages to ng-repeat in the pager controls\n      var pages = _.range(startPage, endPage + 1);\n\n      // Return object with all pager properties required by the view-model\n        return {\n            totalItems: totalItems,\n            currentPage: currentPage,\n            pageSize: pageSize,\n            totalPages: totalPages,\n            startPage: startPage,\n            endPage: endPage,\n            startIndex: startIndex,\n            endIndex: endIndex,\n            pages: pages\n        };\n\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('commonSenseDietApp')\n    .factory('answerService', answerService);\n\n  /** @ngInject */\n  // This service is essentially a promise and is called from search.controller.js and what is returned in the resolve is what gets access in the .then(). in search.controller.js\n  function answerService($log,localStorageService, $q) {\n\n    // service definition\n    var service = {\n      theAnswer: 'no',\n      yesNoMaybeAlgorithm : yesNoMaybeAlgorithm,\n      yesNoMaybePromise: yesNoMaybePromise\n    };\n\n    return service;\n\n    // This uses angular's $q provider. $qProvider is a service that helps you run functions asynchronously, and use their return values (or exceptions) when they are done processing. This function is essentially a promise, is called from search.controller.js and what is returned in the resolve is what gets access in the .then(). in search.controller.js\n    function yesNoMaybePromise(data) {\n\n      var deferred = $q.defer();\n\n      if(data && localStorageService.isSupported) {\n        // clear current localStorage & sessionStorage\n        localStorageService.clearAll();\n\n        // save food's nutritional data in sessionStorage\n        localStorageService.set('foodData', data);\n\n/*\n |-----------------------------------------------------------------------\n | TODO:: place cal to algorithm here before saving the answer to localStorage\n |\n | yesNoMaybeAlgorithm().then(function() {\n |\n |  - Each food will start with a \"Health Score\" of 100 points. That represents\n      the highest health score possible for any given food which means its ultra\n      healthy for you.\n    - Determine a list of the top 30 worst nutrients and minerals for you\n |    and a list of the top 30 healthiest based on highly reputable sources. This\n |    list will be called the \"Optimal Nutrition Index\" or the \"ONI\" list.\n |  - Basically the algorithm will compare these two lists to each food's\n |    nutrition facts and ultimately determine if that food is MORE bad\n |    for you than good for you or vice versa based on certain criteria.\n |  - How will the algorithm do this?\n |      - It will do it in layers..(self contained asyn functions). Each\n |        outer layer will influence the final answer more than its inner\n |        adjacent layer. This, of course, assumes that our ONI\n |        list is actually a reputable and empirical list of optimal\n |        nutrition which is a hard sell for now. This is why we have\n |        layers...\n |      - First, for each nutrition fact of that food, if it is in ONI\n          of bad nutrition data points then it will not gain an int. For each\n          nutriton fact of that food that is in our ONI good list it will\n          gain an integer. This will sum up to a \"Layer 1 Score\". Thus a\n          food's \"layer 1 score\" can only ever go as high as 30 points\n          or as low as 1 points.\n            - Max number of Points: 30\n        - Second, the algorithm will consider the calories per 100 grams.\n          Basically this will be based on a spectrum. We will take the daily\n          recommended caloric intake for most people and divide that by our\n          food's calories per 100 grams. This will tell us how many 100 grams servings of that food you can eat until reaching your daily caloric intake. Thus, our numeric spectrum goes from 1 to 2500. We then take this number, divide it by 100 and use that as our \"Layer 2 Score\" This assumes that the more of something you can eat without exceeding your recommended caloric intake the, healthier it is for you. Based on where a certain food falls on that spectrum, we will take that number and call it our \"Layer 2 Score\".\n            - Max number of Points: 25\n            - source for using 2500 calories as lifetime average. https://www.cnpp.usda.gov/sites/default/files/usda_food_patterns/EstimatedCalorieNeedsPerDayTable.pdf\n        - Third, we will consider total trans-fats. According to the American Heart Association:\n          \"Limiting the amount of trans fats to less than 1 percent of your total daily calories. That means if you need about 2,000 calories a day, less than 20 calories (or 2 grams) should come from trans fats\" - For our purposes we will use 2500 calories a day which means a maximum recommended limit of 2.5 grams trans fat a day. Since all of our food data is measured per every 100 grams of the food in questions, we will take the amount of calories for every 100 grams of that food, divide 2500 by that number, (2500 / 300kcal) = 8.1, take that result, multiply our total-trans fat per every 100 grams figure. If the product of this exceeds 2.5 grams then we will subtract 15 points from the total score. If it doesn't then nothing will happen to the total score.\n        - Fourth, we will consider total sugar.\n        - Fifth, the algorithm will consider that food's food group. Currently there are 25 food groups listed in NDB. While most of these food groups don't really indicate how healthy any of the foods that full under it are, there are a few groups that once can confidently identify as mostly unhealthy i.e. fast food, sweets. and other food groups one can for sure say are healthy i.e. fruits, vegetables, legumes, nut & seed, fats & oils. Therefore for each food group we've identified as mostly healthy we will attribute 5 points max since food group doesn't matter as much as the previous layers.\n          - Max number of points: 15\n\n\n\n | });\n |-----------------------------------------------------------------------\n*/\n\n        // change to true once algorithm comes up with answer.\n        service.theAnswer = 'yes';\n\n        // save yes or no or maybe after algorithm comes up with an answer.\n        localStorageService.set('answer', service.theAnswer);\n\n        deferred.resolve(service.theAnswer);\n\n      } else if (!localStorageService.isSupported) {\n\n          // else if localStorage is not supported do some other stuff...\n          $log.log('local storage is not supported');\n\n          deferred.reject('local storage is not supported');\n      }\n\n      return deferred.promise;\n    }\n\n    function yesNoMaybeAlgorithm() {\n      // get a \"YES\" a \"NO\" or a \"MAYBE\" string.\n    }\n\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('underscore', [])\n    .factory('_', ['$window', function($window) {\n\n      return $window._;\n\n    }]);\n\n})();\n\nangular.module(\"envconfig.module\", [])\n.constant(\"ENV_VARS\", {\"apiUrl\":\"http://api.nal.usda.gov\",\"apiKey\":\"oSZ9f2ly7gkJo0A7fcRtd9z6AEGJaXIgPhNM6lhV\",\"debug\":true})\n.constant(\"test\", true);\n\n(function() {\n  'use strict';\n\n  // Application developers are free to define their own services by registering the service's name and service factory function, with an Angular module. This makes it available to the rest of the app.\n  angular\n    .module('commonSenseDietApp')\n    .factory('getSearchResults', getSearchResults);\n\n  /** @ngInject */\n  // Angular services are substitutable objects that are wired together using dependency injection(DI). You can use services to organize and share code across your app via global templating.\n  function getSearchResults($log, $http, ENV_VARS) {\n\n    // Here we define a service and a method function and access our API variables from .env.\n    var service = {\n      ndbApiKey: ENV_VARS.apiKey,\n      ndbApiUrl: ENV_VARS.apiUrl,\n      getSearchResultsList: getSearchResultsList\n    }\n\n    return service;\n\n    // Here we define the service's main functionality. This is defined inside malarkey.directive.js as a integer which is also where this function gets invoked.\n    function getSearchResultsList(searchterm) {\n\n      // Here we hit the NDB search API using our .env variables but not without concatenating our searchterm query and our API key. We utilize an angular try-catch and depending on if successful or not we display error or return the data to search.contrller.js. For a list of all query parameters and settings visit - https://ndb.nal.usda.gov/ndb/doc/apilist/API-SEARCH.md\n      return $http.get(service.ndbApiUrl + '/ndb/search/?format=json&q=' + searchterm + '&sort=r&api_key=' + service.ndbApiKey)\n          .then(returnSearchResultsList)\n          .catch(getSearchResultsListFail);\n\n\n      function returnSearchResultsList(response) {\n        return response.data;\n      }\n\n      function getSearchResultsListFail(err) {\n        return $log.error(err.data);\n      }\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  // Application developers are free to define their own services by registering the service's name and service factory function, with an Angular module. This makes it available to the rest of the app.\n  angular\n    .module('commonSenseDietApp')\n    .factory('getNutritionalData', getNutritionalData);\n\n  /** @ngInject */\n  // Angular services are substitutable objects that are wired together using dependency injection(DI). You can use services to organize and share code across your app via global templating.\n  function getNutritionalData($log, $http, ENV_VARS) {\n\n    // Here we define a service and a method function and access our API variables from .env.\n    var service = {\n      ndbApiKey: ENV_VARS.apiKey,\n      ndbApiUrl: ENV_VARS.apiUrl,\n      getSearchResultNutritionData: getSearchResultNutritionData\n    }\n\n    return service;\n\n    // Here we define the service's main functionality. This is defined inside malarkey.directive.js as a integer which is also where this function gets invoked.\n    function getSearchResultNutritionData(id) {\n\n      // Here we hitting the NDB search API using our .env variables but not without concatenating our search query and our API key. We utilize an angular try-catch and depending on if successful or not we display error or return the data to search.contrller.js. For a list of all query parameters and settings visit - https://ndb.nal.usda.gov/ndb/doc/apilist/API-SEARCH.md\n      return $http.get(service.ndbApiUrl + '/ndb/reports/?ndbno=' + id + '&type=f&format=json&api_key=' + service.ndbApiKey)\n          .then(returnNutritionalData)\n          .catch(getNutritionalDataFail);\n\n      function returnNutritionalData(response) {\n        return response.data;\n      }\n\n      function getNutritionalDataFail(err) {\n        return $log.error(err.data);\n      }\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  // Application developers are free to define their own services by registering the service's name and service factory function, with an Angular module. This makes it available to the rest of the app.\n  angular\n    .module('commonSenseDietApp')\n    .factory('getFoodNamesOnly', getFoodNamesOnly);\n\n  /** @ngInject */\n  // Angular services are substitutable objects that are wired together using dependency injection(DI). You can use services to organize and share code across your app via global templating.\n  function getFoodNamesOnly($log, $http, ENV_VARS) {\n\n    // Here we define a service and a method function and access our API variables from .env.\n    var service = {\n      ndbApiKey: ENV_VARS.apiKey,\n      ndbApiUrl: ENV_VARS.apiUrl,\n      getFoodNamesList: getFoodNamesList\n    }\n\n    return service;\n\n    // Here we define the service's main functionality. Notice we pass in 'limit' as an argument. This is defined inside malarkey.directive.js as a integer which is also where this function gets invoked.\n    function getFoodNamesList(limit) {\n      // If no limit passed then just manually set limit to avoid undefined.\n      if(!limit) {\n        limit = 30;\n      }\n\n      // Here we calling the NDB Food List API using our .env variables but not without concatenating a limit integer and our API key. We utilize an angular try-catch and depending on if successful or not we display error getFoodNamesFail() or return data returnFoodNamesList() to malarkey.controller.js. For a list of all request parameters visit - https://ndb.nal.usda.gov/ndb/doc/apilist/API-LIST.md\n      return $http.get(service.ndbApiUrl + '/ndb/list?format=json&It=f' + '&max=' + limit + '&sort=n&offset=15&api_key=' + service.ndbApiKey)\n          .then(returnFoodNamesList)\n          .catch(getFoodNamesFail);\n\n\n      function returnFoodNamesList(response) {\n        return response.data;\n      }\n\n      function getFoodNamesFail(err) {\n        return $log.error(err.data);\n      }\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  // Controllers are \"classes\" or \"constructor functions\" that are responsible for providing the application behavior that supports the declarative markup in the template. The recommended way of declaring Controllers is using the array notation. Unlike services, there can be many instances of the same type of controller in an application. Moreover, additional dependencies are made available to Controllers like $scope.\n  angular\n    .module('commonSenseDietApp')\n    .controller('SearchController', SearchController);\n\n\n  function SearchController($document, $scope, getSearchResults, $log, getNutritionalData, $location, $rootScope, answerService) {\n    // Using this pattern allows us to maintain a reference to the THIS scope as a means to 'reveal' public properties and methods for use as the 'view model'. It also has the added benefit of providing a lexical binding which can be referenced inside of closures!\n    var vm = this;\n\n    vm.searchresultsarray = [];\n\n    /* For Search Results Listing -\n     *\n     * Called from search.directive.js upon ngkeyup. It will take the search query and init a new API call to get a list of foods based on the search query from getSearchResults.service.js then set what gets returned to the \"view-model\" vm.\n     */\n    vm.activate = function(searchterm) {\n      return getSearchResults.getSearchResultsList(searchterm).then(function(data) {\n        \n        if(data && data.list) {\n\n          vm.searchresultsarray = data.list.item;\n\n          return vm.searchresultsarray;\n\n        } else {\n\n          vm.searchresultsarray = data.errors.error;\n\n          return vm.searchresultsarray;\n        }\n      });\n    }\n\n    /* For Nutritional Breakdown Page -\n     *\n     * This is a click event handler for the primary-search.html template (ngclick).   * When a search result is clicked on, it will take that result's ID (ndbno) and init a new API call to grab the rest of the nutritional data for that specific food. It then takes that data and passes it to our algorithm service/sessionStorage service which returns a promise with a 'yes', 'no', or 'mabye' string for answer.controller.js to use.\n     */\n    vm.goToSearchResult = function(id) {\n\n      vm.foodNutritionData = null;\n\n      return getNutritionalData.getSearchResultNutritionData(id).then(function(data) {\n\n        vm.foodNutritionData = data;\n\n        if (vm.foodNutritionData) {\n          // send data to service algorithm answer.service.js which will save the food's nutrition data to sessionStorage and return a promise.\n          answerService.yesNoMaybePromise(vm.foodNutritionData).then(function(answer) {\n            if (answer) {\n              // We initialize the AnswerController when we redirect to its page answer.html. That controller will handle building our answer page and displaying food data from sessionStorage.\n              return $location.path('answer');\n            }\n          });\n\n        } else {\n\n          $log.log(\"could not get food's nutrition data from API\");\n        }\n      });\n    }\n\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  // Controllers are \"classes\" or \"constructor functions\" that are responsible for providing the application behavior that supports the declarative markup in the template. The recommended way of declaring Controllers is using the array notation. Unlike services, there can be many instances of the same type of controller in an application. Moreover, additional dependencies are made available to Controllers like $scope.\n  angular\n    .module('commonSenseDietApp')\n    .controller('MainController', MainController);\n\n  /** @ngInject */\n  function MainController($timeout, $scope) {\n    // Using this pattern allows us to maintain a reference to the THIS scope as a means to 'reveal' public properties and methods for use as the 'view model'. It also has the added benefit of providing a lexical binding which can be referenced inside of closures.\n    var vm = this;\n\n\n    vm.classAnimation = '';\n    vm.creationDate = 1450389822870;\n\n    activate();\n    // this timeout needs to be canceled!\n    function activate() {\n      $timeout(function() {\n        vm.classAnimation = 'pulse';\n      }, 10000);\n    }\n\n    $scope.$on('$destroy', function () {\n      $timeout.cancel(activate)\n    });\n  }\n})();\n\n(function() {\n  'use strict';\n\n  // Controllers are \"classes\" or \"constructor functions\" that are responsible for providing the application behavior that supports the declarative markup in the template. The recommended way of declaring Controllers is using the array notation. Unlike services, there can be many instances of the same type of controller in an application. Moreover, additional dependencies are made available to Controllers like $scope.\n  angular\n    .module('commonSenseDietApp')\n    .controller('Error404Controller', Error404Controller);\n\n\n  function Error404Controller(){\n    // Using this pattern allows us to maintain a reference to the THIS scope as a means to 'reveal' public properties and methods for use as the 'view model'. It also has the added benefit of providing a lexical binding which can be referenced inside of closures!\n    var vm = this;\n\n  }\n})();\n\n(function() {\n  'use strict';\n\n\tangular\n\t\t.module('commonSenseDietApp')\n\t\t.controller('ContactController', ContactController);\n\n\n\tfunction ContactController($http, $log) {\n\t\t// controllerAs syntax\n\t\tvar vm = this;\n\n    vm.processContactForm = function() {\n      // Further form validation.\n      // $log.log(vm.email);\n\n      return $http.post('/submitContactUsForm')\n          .then(returnSendSuccessful)\n          .catch(sendFail);\n\n\n      function returnSendSuccessful(response) {\n        return response.data;\n      }\n\n      function sendFail(err) {\n        return $log.error(err.data);\n      }\n    }\n\n\n\t}\n\n})();\n\n(function() {\n  'use strict';\n\n  // Controllers are \"classes\" or \"constructor functions\" that are responsible for providing the application behavior that supports the declarative markup in the template. The recommended way of declaring Controllers is using the array notation. Unlike services, there can be many instances of the same type of controller in an application. Moreover, additional dependencies are made available to Controllers like $scope.\n  angular\n    .module('commonSenseDietApp')\n    .controller('AnswerController', AnswerController);\n\n\n  function AnswerController($log, localStorageService){\n    // Using this pattern allows us to maintain a reference to the THIS scope as a means to 'reveal' public properties and methods for use as the 'view model'. It also has the added benefit of providing a lexical binding which can be referenced inside of closures!\n    var vm = this;\n\n    // Table of nutrients data report from NDB API\n    vm.stored;\n    vm.yesNoMaybe;\n\n    // Chosen table of contents sub-category groups. There are more but not all foods have every one but these in NDB.\n    vm.nutrientGroups = {\n      proximates: false,\n      minerals: false,\n      vitamins: false,\n      lipids: false,\n      other: false,\n      aminoAcids: false\n    }\n\n    // This gets called from the search.controller.js $rootScope listener and loads local storage data once and once only which is when the init click event occurs. The function below reloads the data once you're already on the page and happen to refresh.\n    vm.getLocalStorageData = function() {\n      // Retrieve data that answer.service.js saved into sessionStorage\n      if(localStorageService.get('foodData')) {\n        // Hold the entire report in vm.stored. Hold final answer in vm.yesNoMaybe.\n        vm.stored = localStorageService.get('foodData');\n        vm.yesNoMaybe = localStorageService.get('answer').split(/UPC:|gtin:/g)[0].replace(/\\,/g,\"\").toLowerCase();\n\n        // Check to see if chosen nutrient groups have nutrients listed under them aka exist in the data. If so then display in view.\n        vm.stored.report.food.nutrients.forEach(function(nutrient) {\n          switch (nutrient.group) {\n            case \"Proximates\":\n              vm.nutrientGroups.proximates = true;\n              break;\n            case \"Minerals\":\n              vm.nutrientGroups.minerals = true;\n              break;\n            case \"Vitamins\":\n              vm.nutrientGroups.vitamins = true;\n              break;\n            case \"Lipids\":\n              vm.nutrientGroups.lipids = true;\n              break;\n            case \"Other\":\n              vm.nutrientGroups.other = true;\n              break;\n            case \"Amino Acids\":\n              vm.nutrientGroups.aminoAcids = true;\n              break;\n            default:\n              break;\n          }\n        });\n\n        $log.log(vm.stored.report);\n\n      } else {\n\n        $log.log('No data in localStorage or sessionStorage!');\n      }\n    };\n\n    vm.getLocalStorageData();\n  }\n})();\n\n(function() {\n  'use strict';\n\n  // We can specify functions (Module Methods) to run at configuration and run time for a module by calling the config and run methods. These functions are injectable with dependencies(DI).\n  angular\n    .module('commonSenseDietApp')\n    .run(runBlock);\n\n  /** @ngInject */\n  function runBlock($log) {\n\n    $log.debug('runBlock end');\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('commonSenseDietApp')\n    .config(routeConfig);\n\n  function routeConfig($routeProvider) {\n    // Home Page\n    $routeProvider\n    .when('/', {\n      templateUrl: 'app/views/pages/home.html',\n      controller: 'MainController',\n      controllerAs: 'vm'\n    })\n    .otherwise({\n      controller: 'Error404Controller',\n      templateUrl: 'app/views/errors/404.html'\n    });\n\n    // About Page\n    $routeProvider\n    .when('/about', {\n      templateUrl: 'app/views/pages/static/about.html'\n    })\n    .otherwise({\n      controller: 'Error404Controller',\n      templateUrl: 'app/views/errors/404.html'\n    });\n\n    // Disclaimer Page\n    $routeProvider\n    .when('/disclaimer', {\n      templateUrl: 'app/views/pages/static/disclaimer.html'\n    })\n    .otherwise({\n      controller: 'Error404Controller',\n      templateUrl: 'app/views/errors/404.html'\n    });\n\n    // Privacy Policy Page\n    $routeProvider\n    .when('/privacy-policy', {\n      templateUrl: 'app/views/pages/static/privacy-policy.html'\n    })\n    .otherwise({\n      controller: 'Error404Controller',\n      templateUrl: 'app/views/errors/404.html'\n    });\n\n    // Contact Us Page\n    $routeProvider\n    .when('/contact', {\n      templateUrl: 'app/views/pages/contact.html',\n      controller: 'ContactController',\n      controllerAs: 'vm'\n    })\n    .otherwise({\n      controller: 'Error404Controller',\n      templateUrl: 'app/views/errors/404.html'\n    });\n\n    // Answer Page\n    $routeProvider\n    .when('/answer', {\n      templateUrl: 'app/views/pages/answer.html',\n      controller: 'AnswerController',\n      controllerAs: 'vm'\n    })\n    .otherwise({\n      controller: 'Error404Controller',\n      templateUrl: 'app/views/errors/404.html'\n    });\n\n    // Algorithm Explainer Page\n    $routeProvider\n    .when('/how-it-works', {\n      templateUrl: 'app/views/pages/static/how-it-works.html'\n    })\n    .otherwise({\n      controller: 'Error404Controller',\n      templateUrl: 'app/views/errors/404.html'\n    });\n\n  }\n\n})();\n\n/*\n   global malarkey:false,\n   moment:false\n*/\n(function() {\n  'use strict';\n\n  angular\n    .module('commonSenseDietApp')\n    .constant('malarkey', malarkey)\n    .constant('moment', moment);\n\n})();\n\n(function() {\n  'use strict';\n\n  // We can specify functions (Module Methods) to run at configuration and run time for a module by calling the config and run methods. These functions are injectable with dependencies(DI).\n  angular\n    .module('commonSenseDietApp')\n    .config(config);\n\n  /** @ngInject */\n  function config($logProvider, $httpProvider, localStorageServiceProvider) {\n    // Enable log\n    $logProvider.debugEnabled(true);\n\n    // For Access-Control-Allow-Origin and Set-Cookie header\n    $httpProvider.defaults.useXDomain = true;\n    $httpProvider.defaults.headers.common = 'Content-Type: application/json';\n    delete $httpProvider.defaults.headers.common['X-Requested-With'];\n\n    // Set local storage to use session storage and broadcast to $rootScope for setItem and removeItem\n    localStorageServiceProvider.setStorageType('sessionStorage');\n    // localStorageServiceProvider.setNotify(true, true);\n    // localStorageServiceProvider.setPrefix('yourAppName');\n  }\n\n})();\n\nangular.module(\"commonSenseDietApp\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/views/errors/404.html\",\"<section class=\\\"text-center\\\"><p>This Page Does Not Exist.</p></section>\");\n$templateCache.put(\"app/views/pages/answer.html\",\"<section class=\\\"answer-content\\\"><div class=\\\"the-answer text-center {{ vm.yesNoMaybe == \\'yes\\' ? \\'green\\' : \\'orange\\' }}\\\"><span class=\\\"{{ vm.yesNoMaybe == \\'yes\\' ? \\'orange\\' : \\'green\\' }}\\\">{{ vm.stored.report.food.name }}</span><h1>{{ vm.yesNoMaybe }}!</h1><p>Oink Oink...</p></div><div class=\\\"table-of-nutrients-wrapper\\\"><h2>Table of Nutrients</h2><ul><li ng-if=\\\"vm.stored.report.food.fg\\\" class=\\\"dashboardbox\\\"><label>Food Group<p>{{vm.stored.report.food.fg}}</p></label></li><li ng-if=\\\"vm.stored.report.food.sn\\\" class=\\\"dashboardbox\\\"><label>Scientific Name<p>{{vm.stored.report.food.sn}}</p></label></li><li ng-if=\\\"vm.stored.report.food.manu\\\" class=\\\"dashboardbox\\\"><label>Manufacturer<p>{{vm.stored.report.food.manu}}</p></label></li><li ng-if=\\\"vm.stored.report.food.cn\\\" class=\\\"dashboardbox\\\"><label>Commercial Name<p>{{vm.stored.report.food.cn}}</p></label></li><li ng-if=\\\"vm.stored.report.food.ff\\\" class=\\\"dashboardbox\\\"><label>Fat Factor<p>{{vm.stored.report.food.ff}}</p></label></li><li ng-if=\\\"vm.stored.report.food.pf\\\" class=\\\"dashboardbox\\\"><label>Protein Factor<p>{{vm.stored.report.food.pf}}</p></label></li><li ng-if=\\\"vm.stored.report.food.cf\\\" class=\\\"dashboardbox\\\"><label>Carbohydrate Factor<p>{{vm.stored.report.food.cf}}</p></label></li><li ng-if=\\\"vm.stored.report.food.r\\\" class=\\\"dashboardbox\\\"><label>Refuse Percentage<p>{{vm.stored.report.food.r}}</p></label></li><li ng-if=\\\"vm.stored.report.food.rd\\\" class=\\\"dashboardbox\\\"><label>Refuse Description<p>{{vm.stored.report.food.rd}}</p></label></li><li ng-if=\\\"vm.stored.report.food.sd\\\" class=\\\"dashboardbox\\\"><label>Short Description<p>{{vm.stored.report.food.sd}}</p></label></li></ul><span>Information provided by food manufacturers is label data. Manufacturers are responsible for descriptions, nutrient data and ingredient information. USDA calculated nutrient values and weights are for every 100 grams of<p>{{ vm.stored.report.food.name }}</p></span><table class=\\\"table-of-nutrients\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\"><thead><tr><th>Nutrient</th><th>For Every 100 Grams of<br>{{ vm.stored.report.food.name }}..</th><th ng-repeat=\\\"measure in vm.stored.report.food.nutrients[0].measures\\\">{{ measure.label }} <span ng-if=\\\"measure.eqv\\\">{{ measure.eqv }}g</span></th></tr></thead><tbody><tr><td ng-if=\\\"vm.nutrientGroups.proximates\\\" class=\\\"table-of-nutrients-subheader\\\" colspan=\\\"100\\\">Proximates</td></tr><tr ng-repeat=\\\"nutrient in vm.stored.report.food.nutrients\\\"><td ng-if=\\\"nutrient.group == \\'Proximates\\'\\\">{{ nutrient.name }}</td><td ng-if=\\\"nutrient.group == \\'Proximates\\'\\\">{{ nutrient.value }} {{ nutrient.unit }}</td><td ng-if=\\\"nutrient.group == \\'Proximates\\' && vm.stored.report.food.nutrients[0].measures.length >= 1\\\" ng-repeat=\\\"measure in nutrient.measures\\\">{{ measure.value }}</td></tr><tr><td ng-if=\\\"vm.nutrientGroups.minerals\\\" class=\\\"table-of-nutrients-subheader\\\" colspan=\\\"100\\\">Minerals</td></tr><tr ng-repeat=\\\"nutrient in vm.stored.report.food.nutrients\\\"><td ng-if=\\\"nutrient.group == \\'Minerals\\'\\\">{{ nutrient.name }}</td><td ng-if=\\\"nutrient.group == \\'Minerals\\'\\\">{{ nutrient.value }} {{ nutrient.unit }}</td><td ng-if=\\\"nutrient.group == \\'Minerals\\' && vm.stored.report.food.nutrients[0].measures.length >= 1\\\" ng-repeat=\\\"measure in nutrient.measures\\\">{{ measure.value }}</td></tr><tr><td ng-if=\\\"vm.nutrientGroups.vitamins\\\" class=\\\"table-of-nutrients-subheader\\\" colspan=\\\"100\\\">Vitamins</td></tr><tr ng-repeat=\\\"nutrient in vm.stored.report.food.nutrients\\\"><td ng-if=\\\"nutrient.group == \\'Vitamins\\'\\\">{{ nutrient.name }}</td><td ng-if=\\\"nutrient.group == \\'Vitamins\\'\\\">{{ nutrient.value }} {{ nutrient.unit }}</td><td ng-if=\\\"nutrient.group == \\'Vitamins\\' && vm.stored.report.food.nutrients[0].measures.length >= 1\\\" ng-repeat=\\\"measure in nutrient.measures\\\">{{ measure.value }}</td></tr><tr><td ng-if=\\\"vm.nutrientGroups.lipids\\\" class=\\\"table-of-nutrients-subheader\\\" colspan=\\\"100\\\">Lipids</td></tr><tr ng-repeat=\\\"nutrient in vm.stored.report.food.nutrients\\\"><td ng-if=\\\"nutrient.group == \\'Lipids\\'\\\">{{ nutrient.name }}</td><td ng-if=\\\"nutrient.group == \\'Lipids\\'\\\">{{ nutrient.value }} {{ nutrient.unit }}</td><td ng-if=\\\"nutrient.group == \\'Lipids\\' && vm.stored.report.food.nutrients[0].measures.length >= 1\\\" ng-repeat=\\\"measure in nutrient.measures\\\">{{ measure.value }}</td></tr><tr><td ng-if=\\\"vm.nutrientGroups.aminoAcids\\\" class=\\\"table-of-nutrients-subheader\\\" colspan=\\\"100\\\">Amino Acids</td></tr><tr ng-repeat=\\\"nutrient in vm.stored.report.food.nutrients\\\"><td ng-if=\\\"nutrient.group == \\'Amino Acids\\'\\\">{{ nutrient.name }}</td><td ng-if=\\\"nutrient.group == \\'Amino Acids\\'\\\">{{ nutrient.value }} {{ nutrient.unit }}</td><td ng-if=\\\"nutrient.group == \\'Amino Acids\\' && vm.stored.report.food.nutrients[0].measures.length >= 1\\\" ng-repeat=\\\"measure in nutrient.measures\\\">{{ measure.value }}</td></tr><tr><td ng-if=\\\"vm.nutrientGroups.other\\\" class=\\\"table-of-nutrients-subheader\\\" colspan=\\\"100\\\">Other</td></tr><tr ng-repeat=\\\"nutrient in vm.stored.report.food.nutrients\\\"><td ng-if=\\\"nutrient.group == \\'Other\\'\\\">{{ nutrient.name }}</td><td ng-if=\\\"nutrient.group == \\'Other\\'\\\">{{ nutrient.value }} {{ nutrient.unit }}</td><td ng-if=\\\"nutrient.group == \\'Other\\' && vm.stored.report.food.nutrients[0].measures.length >= 1\\\" ng-repeat=\\\"measure in nutrient.measures\\\">{{ measure.value }}</td></tr></tbody></table></div></section><section class=\\\"text-center\\\"><h1>Place Huge Banner Ad Here :)</h1></section><section class=\\\"sources-of-data-wrapper\\\" ng-if=\\\"vm.stored.report.sources.length\\\"><h3>Sources of Data</h3><ul><li ng-repeat=\\\"source in vm.stored.report.sources\\\"><p>{{source.authors}}, <strong>{{source.title}}</strong> {{source.year}}, {{source.vol}}, {{source.iss}}</p></li></ul></section><include-footer></include-footer>\");\n$templateCache.put(\"app/views/pages/contact.html\",\"<section><div class=\\\"contact-us-title\\\"><h1>Contact Us</h1></div><form class=\\\"contact-us-form\\\" name=\\\"contactUsForm\\\" ng-submit=\\\"vm.processContactForm()\\\"><div class=\\\"form-group\\\"><input placeholder=\\\"name\\\" type=\\\"text\\\" name=\\\"name\\\" ng-model=\\\"vm.name\\\" class=\\\"form-control\\\" required=\\\"\\\"> <span class=\\\"label label-danger\\\" ng-show=\\\"vm.submitted && contact-us-form.name.$error.required\\\">Required!</span></div><div class=\\\"form-group\\\"><input placeholder=\\\"Email\\\" type=\\\"email\\\" name=\\\"email\\\" ng-model=\\\"vm.email\\\" class=\\\"form-control\\\" required=\\\"\\\"> <span class=\\\"label label-danger\\\" ng-show=\\\"vm.submitted && contact-us-form.email.$error.required\\\">Required!</span> <span class=\\\"label label-danger\\\" ng-show=\\\"vm.submitted && contact-us-form.$error.email\\\">Invalid email!</span></div><div class=\\\"form-group\\\"><input name=\\\"headline\\\" placeholder=\\\"Headline\\\" type=\\\"text\\\" ng-model=\\\"vm.headline\\\" class=\\\"form-control\\\" required=\\\"\\\"> <span class=\\\"label label-danger\\\" ng-show=\\\"vm.submitted && contact-us-form.headline.$error.required\\\">Required!</span></div><div class=\\\"form-group\\\"><textarea name=\\\"message\\\" placeholder=\\\"Message\\\" type=\\\"textbox\\\" ng-model=\\\"vm.message\\\" class=\\\"form-control\\\" required=\\\"\\\"></textarea> <span class=\\\"label label-danger\\\" ng-show=\\\"vm.submitted && contact-us-form.subjectList.$error.required\\\">Required!</span></div><input type=\\\"submit\\\" id=\\\"submit-contact-form-btn\\\"></form></section><include-footer></include-footer>\");\n$templateCache.put(\"app/views/pages/home.html\",\"<section class=\\\"home-container\\\"><div id=\\\"wrapper\\\" class=\\\"jumbotron\\\"><div class=\\\"header-container\\\"><ul class=\\\"header-list\\\"><li class=\\\"header\\\"><img src=\\\"../../../assets/images/text-logo-7.png\\\"></li><li><p class=\\\"sub-header\\\">A simple, yes or no response to the question. Is<acme-malarkey extra-values=\\\"[\\'agave\\', \\'olive oil\\', \\'whole milk\\']\\\"></acme-malarkey>good for me?</p></li><ul></ul></ul></div></div><primary-search></primary-search><div class=\\\"home-buttons\\\"><div class=\\\"animated infinite\\\" ng-class=\\\"vm.classAnimation\\\"><a ng-click=\\\"vm.handleKeyupEvent()\\\" class=\\\"btn btn-lg btn-success\\\">SEARCH</a></div><div class=\\\"animated infinite\\\" ng-class=\\\"vm.classAnimation\\\"><a class=\\\"btn btn-lg btn-success\\\" href=\\\"#/about\\\">UH..</a></div></div></section>\");\n$templateCache.put(\"app/views/pages/submitNewFood.html\",\"<section class=\\\"new-food-content\\\"><div class=\\\"submit-new-food-title\\\"><h1>Submit a New Food</h1><p>Before submitting a food be sure to search for it first!<br>We might already have it in our database.</p></div><form class=\\\"submit-food-form\\\" ng-submit=\\\"newFood.submitFood()\\\"><input placeholder=\\\"Food Name\\\" ,=\\\"\\\" type=\\\"text\\\" class=\\\"name-input\\\" ng-model=\\\"newFood.formData.foodName\\\"> <input placeholder=\\\"Food ID\\\" ,=\\\"\\\" type=\\\"text\\\" class=\\\"id-input\\\" ng-model=\\\"newFood.formData.foodId\\\"> <input placeholder=\\\"Food Group\\\" ,=\\\"\\\" type=\\\"text\\\" class=\\\"food-group-input\\\" ng-model=\\\"newFood.formData.foodGroup\\\"> <input placeholder=\\\"Yes, No or Maybe\\\" ,=\\\"\\\" type=\\\"text\\\" class=\\\"answer-input\\\" ng-model=\\\"newFood.formData.answer\\\"> <input placeholder=\\\"Reason Why\\\" ,=\\\"\\\" type=\\\"text\\\" class=\\\"carbs-input\\\" ng-model=\\\"newFood.formData.reasoning\\\"> <input placeholder=\\\"serving size\\\" ,=\\\"\\\" type=\\\"number\\\" class=\\\"serving-size-input\\\" ng-model=\\\"newFood.formData.servingSize\\\"> <input placeholder=\\\"calories\\\" ,=\\\"\\\" type=\\\"number\\\" class=\\\"name-input\\\" ng-model=\\\"newFood.formData.calories\\\"> <input placeholder=\\\"total fat\\\" ,=\\\"\\\" type=\\\"number\\\" class=\\\"total-fat-input\\\" ng-model=\\\"newFood.formData.totalFat\\\"> <input placeholder=\\\"Trans Fat\\\" ,=\\\"\\\" type=\\\"number\\\" class=\\\"trans-fat-input\\\" ng-model=\\\"newFood.formData.transFat\\\"> <input placeholder=\\\"saturated fat\\\" ,=\\\"\\\" type=\\\"number\\\" class=\\\"saturated-fat-input\\\" ng-model=\\\"newFood.formData.saturatedFat\\\"> <input placeholder=\\\"cholesterol\\\" ,=\\\"\\\" type=\\\"number\\\" class=\\\"cholesterol-input\\\" ng-model=\\\"newFood.formData.cholesterol\\\"> <input placeholder=\\\"protein\\\" ,=\\\"\\\" type=\\\"number\\\" class=\\\"protein-input\\\" ng-model=\\\"newFood.formData.protein\\\"> <input placeholder=\\\"sodium\\\" ,=\\\"\\\" type=\\\"number\\\" class=\\\"sodium-input\\\" ng-model=\\\"newFood.formData.sodium\\\"> <input placeholder=\\\"carbohydrates\\\" ,=\\\"\\\" type=\\\"number\\\" class=\\\"carbs-input\\\" ng-model=\\\"newFood.formData.carbs\\\"> <input placeholder=\\\"sugar\\\" ,=\\\"\\\" type=\\\"number\\\" class=\\\"sugar-input\\\" ng-model=\\\"newFood.formData.sugar\\\"> <input placeholder=\\\"fiber\\\" ,=\\\"\\\" type=\\\"number\\\" class=\\\"fiber-input\\\" ng-model=\\\"newFood.formData.fiber\\\"> <input type=\\\"checkbox\\\" value=\\\"vegetarian\\\" ng-model=\\\"newFood.formData.vegetarian\\\"> vegetarian <input type=\\\"checkbox\\\" value=\\\"gluten-free\\\" ng-model=\\\"newFood.formData.glutenFree\\\"> gluten free <input type=\\\"checkbox\\\" value=\\\"vegan\\\" ng-model=\\\"newFood.formData.vegan\\\"> vegan <input type=\\\"checkbox\\\" value=\\\"nut-free\\\" ng-model=\\\"newFood.formData.nutFree\\\"> nut free <input type=\\\"submit\\\" id=\\\"submit-new-food-btn\\\"></form></section>\");\n$templateCache.put(\"app/views/partials/footer.html\",\"<section class=\\\"footer-content\\\"><div class=\\\"footer-nav-container\\\"><ul class=\\\"footer-nav-list\\\"><li><a ng-href=\\\"#/\\\">home</a></li><li><a ng-href=\\\"#/about\\\">about</a></li><li><a ng-href=\\\"#/contact\\\">contact us</a></li><li><a ng-href=\\\"#/privacy-policy\\\">privacy policy</a></li></ul></div><div id=\\\"scrolled-to\\\" class=\\\"disclaimer-container\\\"><p class=\\\"disclaimer-copy\\\">DISCLAIMER: We admit we know nothing about healthy dietary practices and overall food consumption. We also do not recommend you you use our service as a means to follow a strict diet without first consulting with your doctor. Any advice you find on our site does not consider prior existing medical conditions such as diabetes, heart-disease or any and all medical conditions. Our search results and advice is completely biased and in no way reflects any empirical or medical research or dietary expertise. You use this site at your own risk and in using it, agree to not hold us liable for any consquences from decisions made on your behalf as a results of using this website and/or service.</p><p class=\\\"disclaimer-copy\\\">Copyright 2016 - Blackhouse LLC.</p></div></section>\");\n$templateCache.put(\"app/views/partials/navbar.html\",\"<nav class=\\\"navbar\\\"><ul><li class=\\\"active nav-logo\\\"><a ng-href=\\\"#/\\\"><img src=\\\"../../.././assets/images/symbol-logo-6.png\\\"></a><p>In <span>ALPHA</span> since: {{ vm.relativeDate }}.</p></li><li><a ng-href=\\\"#/about\\\">About</a></li><li><a ng-href=\\\"#/contact\\\">Contact</a></li><li><a ng-href=\\\"#/disclaimer\\\">Disclaimer</a></li></ul></nav>\");\n$templateCache.put(\"app/views/partials/primary-search.html\",\"<div id=\\\"move-searchbar\\\" class=\\\"searchbar-container\\\"><input class=\\\"home-searchbar\\\" type=\\\"text\\\" ng-model=\\\"vm.searchterm\\\" ng-model-options=\\\"{debounce: 200}\\\" placeholder=\\\"Raw Oranges...\\\" ng-keyup=\\\"vm.handleKeyupEvent()\\\"> <img ng-click=\\\"vm.handleKeyupEvent()\\\" class=\\\"search-icon not-visible\\\" src=\\\"../../.././assets/images/search_icon_1.png\\\"></div><section class=\\\"search-results-container not-visible\\\"><ul ng-if=\\\"vm.items.length > 1\\\" class=\\\"search-results-list\\\"><li ng-repeat=\\\"searchResult in vm.items\\\" ng-click=\\\"vm.goToSearchResult(searchResult.ndbno)\\\"><p class=\\\"result-name\\\">{{searchResult.name}}</p><p class=\\\"result-id\\\"><span>{{searchResult.group}}</span></p></li></ul><ul ng-if=\\\"vm.items[0].message\\\" class=\\\"no-search-results\\\"><li><p class=\\\"result-name\\\">{{ vm.items[0].message }}</p></li></ul></section><section class=\\\"paginator\\\"><ul ng-if=\\\"vm.pager.pages.length\\\"><li><a ng-click=\\\"vm.setPage(1, vm.searchresultsarray.length)\\\">First</a></li><li><a ng-click=\\\"vm.setPage(vm.pager.currentPage - 1, vm.searchresultsarray.length)\\\">Previous</a></li><li ng-repeat=\\\"page in vm.pager.pages\\\" ng-class=\\\"{paginatorActive:vm.pager.currentPage === page}\\\"><a ng-click=\\\"vm.setPage(page, vm.searchresultsarray.length)\\\">{{page}}</a></li><li><a ng-click=\\\"vm.setPage(vm.pager.currentPage + 1)\\\">Next</a></li><li><a ng-click=\\\"vm.setPage(vm.pager.totalPages)\\\">Last</a></li></ul><p ng-if=\\\"vm.pager.pages.length\\\">About <span>{{vm.totalResults}}</span> Total Search Results.<br>Page <span>{{vm.page}}</span> of <span>{{vm.pager.totalPages}}</span></p></section>\");\n$templateCache.put(\"app/views/static/about.html\",\"<section class=\\\"about-content\\\"><div class=\\\"about-copy-container\\\"><h1 class=\\\"about-header\\\">Eating Healthy is Simple...Right?</h1><p class=\\\"about-copy\\\">We\\'ve all heard of the Atkins diet and the Paleo diet and the raw foods diet and the blood type diet and the cigarette diet and the baby food diet and the WWII rations diet but come on! Hasn\\'t it all gotten just a bit too riduculous? <span class=\\\"highlight\\\">Since when did eating healthy become so complicated?</span> What in the world happened to common sense?</p><p class=\\\"about-copy\\\">We created Foodle because we believe that you don\\'t need a crazy diet fad to eat well. <span class=\\\"highlight\\\">Simply search any food, beverage or meal and get a big fat</span> <span>YES</span> or <span>NO</span> response...That\\'s it!<br></p><p class=\\\"about-copy\\\">What do we actually know about nutrition?... Uh nothing. We simply BELIEVE that eating healthy isn\\'t complicated (not to mention our kickass <a href=\\\"#\\\">algorithm</a> based on nutrional data from the <a href=\\\"#\\\">USDA National Nutrient Database for Standard Reference</a>). Is a cheeseburger good for you? <span>NO!</span> Is an apple good for you? <span>YES!</span><br></p><p class=\\\"about-copy\\\">See how easy that was! Some might call it common sense...but then again common sense isn\\'t so common is it? Why follow some crazy, out-of-the-box diet fad you can\\'t stick to anyways? Before you eat something, <span class=\\\"highlight\\\">just Foodle it.</span></p></div></section><include-footer></include-footer>\");\n$templateCache.put(\"app/views/static/disclaimer.html\",\"<section class=\\\"disclaimer-content\\\"><div class=\\\"disclaimer-copy-container\\\"><h1 class=\\\"disclaimer-header\\\">Disclaimer</h1><p class=\\\"disclaimer-copy\\\">We admit we know nothing about healthy dietary practices and overall food consumption. We also do not recommend you use our service as a means to follow a strict diet without first consulting with your doctor. Any advice you find on our site does not consider prior existing medical conditions such as diabetes, heart-disease or any and all medical conditions. Our search results and advice is completely biased and in no way reflects any empirical or medical research or dietary expertise. You use this site at your own risk and in using it, agree to not hold us liable for any consquences from decisions made on your behalf as a results of using this website and/or service.</p><p class=\\\"disclaimer-copy\\\">Blackhouse LLC, by providing this service and website, is not making any assurances, guaranties, or warranties as to the safeness or riskiness of any content on or produced by this website. While we have employed a patent-pending technology to provide this service, Users should not only rely on information gathered from this website and our search utility. This website is provided for informational purposes only and is not comparable to other information provided by medical, scientific, governmental, dietary and/or nutritional organizations or groups such as the FDA. Any information you attain from this website is not tailored to each individual User and therefore may fail to account for your individual preferences, risk-tolerances, or medical situation/s. This website does not provide medical or dietary advice and should not be used as such. Each User should do his or her due diligence prior to pursuing acts based on information obtained from this website and may also wish to consult a medical advisor.</p></div></section>\");\n$templateCache.put(\"app/views/static/how-it-works.html\",\"\");\n$templateCache.put(\"app/views/static/privacy-policy.html\",\"<section class=\\\"privacy-policy-content\\\"><div class=\\\"privacy-policy-container\\\"><h1 class=\\\"privacy-policy-header\\\">Privacy Policy</h1><p class=\\\"privacy-policy-copy\\\">This privacy policy discloses the privacy practices for Foodle.com, commonSenseDietApp. This privacy policy applies solely to information collected by this web site and certain third parties mentioned here after. It will notify you of the following:</p><ul class=\\\"privacy-policy-copy-list\\\"><li><p class=\\\"privacy-policy-copy\\\">What personally identifiable information is collected from you through the web site, how it is used and with whom it may be shared.</p></li><li><p class=\\\"privacy-policy-copy\\\">What choices are available to you regarding the use of your data.</p></li><li><p class=\\\"privacy-policy-copy\\\">The security procedures in place to protect the misuse of your information.</p></li></ul><h2 class=\\\"privacy-policy-subheader\\\">Information Collection, Use, and Sharing</h2><p class=\\\"privacy-policy-copy\\\">We are the sole owners of any information collected from you via this site. We only have access to collect information that you voluntarily give us via email or other direct contact from you. We will not sell or rent this information to anyone at anytime under any circumstances unless upon receiving a valid request from you to release your data only and your data only.</p><p class=\\\"privacy-policy-copy\\\">We are the sole owners of any information collected from you via this site. Currently we only have access to collect information that you voluntarily give us via email or other direct contact from you. We will not sell, rent give or show this information to anyone at anytime under any circumstances unless upon receiving a valid request from you to release your data only and your data only. Be aware that although we do not collect any data from you at this time we do employ third-party technologies and work with third-party vendors that may use cookies to serve ads based on a user\\'s prior visits. This is discussed in further detail below.</p><p class=\\\"privacy-policy-copy\\\">We will use your information to respond to you, regarding the reason you contacted us. We will not share your information with any third party outside of our organization, other than as necessary to fulfill your request, e.g. to ship an order or answer a suppor ticket.</p><p class=\\\"privacy-policy-copy\\\">Unless you ask us not to, we may contact you via email (only if you have provided us your email before by contacting us) in the future to tell you about specials, new products or services, or changes to this privacy policy.</p><h2 class=\\\"privacy-policy-subheader\\\">Your Access to and Control Over Information</h2><p class=\\\"privacy-policy-copy\\\">You may opt out of any future contacts from us at any time. You can do the following at any time by contacting us via the contact form on our website:</p><ul class=\\\"privacy-policy-copy-list\\\"><li><p class=\\\"privacy-policy-copy\\\">See what data we have about you, if any.</p></li><li><p class=\\\"privacy-policy-copy\\\">Change/correct any data we have about you.</p></li><li><p class=\\\"privacy-policy-copy\\\">Have us delete any data we have about you.</p></li><li><p class=\\\"privacy-policy-copy\\\">Express any concern you have about our use of your data</p></li></ul><h2 class=\\\"privacy-policy-subheader\\\">Security</h2><p class=\\\"privacy-policy-copy\\\">We take precautions to protect your information. When you submit sensitive information via the website, your information is protected both online and offline.</p><p class=\\\"privacy-policy-copy\\\">Wherever we collect sensitive information (such as credit card data or email addresses), that information is encrypted and transmitted to us in a secure way. You can verify this by looking for a closed lock icon at the bottom of your web browser, or by looking for \\\"https\\\" at the beginning of the address URL of our web page.</p><p class=\\\"privacy-policy-copy\\\">While we use encryption to protect sensitive information transmitted online, we also protect your information offline. Only employees who need the information to perform a specific job (for example, billing or customer service) are granted access to personally identifiable information. The computers/servers in which we store personally identifiable information are kept in a secure environment.</p><h2 class=\\\"privacy-policy-subheader\\\">Cookies and Third-Party Vendors</h2><p class=\\\"privacy-policy-copy\\\">We work with third-party vendors that use \\\"cookies\\\" on this site (mainly Google). A cookie is a piece of data stored on a site visitor\\'s hard drive to help improve access to the site and identify repeat visits. Cookies can enable sites to track and target the interests of users to enhance their site experience. Usage of these cookie is in no way linked to any personally identifiable information about you, the user. Third party vendors, including Google, use cookies on this website to serve ads based on our users\\' prior visits to this site or other websites. Google\\'s use of advertising cookies enables it and its partners to serve ads to your users based on their visit to your sites and/or other sites on the Internet. Users may opt out of personalized advertising by visiting <a href=\\\"https://www.google.com/settings/u/0/ads/authenticated\\\">Ad Settings</a>. Alternatively users can opt out of a third-party vendor\\'s use of cookies for personalized advertising by visiting <a href=\\\"www.aboutads.info\\\">www.aboutads.info</a>.</p><h2 class=\\\"privacy-policy-subheader\\\">Links</h2><p class=\\\"privacy-policy-copy\\\">This web site contains links to other sites. Please be aware that we are not responsible for the content or privacy practices of such other sites. We encourage our users to be aware when they leave our site and to read the privacy statements of any other site that collects personally identifiable information.</p></div></section><include-footer></include-footer>\");}]);"],"sourceRoot":"/source/"}