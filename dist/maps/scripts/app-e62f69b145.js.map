{"version":3,"sources":["scripts/app-e62f69b145.js"],"names":["angular","module","acmeNavbar","directive","restrict","templateUrl","controller","controllerAs","bindToController","includeFooter","NavbarController","moment","vm","this","relativeDate","creationDate","fromNow","$inject","MalarkeyController","$log","getFoodNamesOnly","activate","getFoodNamesList","then","info","data","foodnameslist","primarySearch","$document","$timeout","Paginator","linkFunc","scope","el","attr","initializeSearch","element","querySelector","addClass","removeClass","timer","searchterm","setPage","page","length","pager","totalPages","totalResults","getPaginator","items","searchresultsarray","slice","startIndex","endIndex","handleKeyupEvent","watcher","$watch","forEach","searchResult","name","split","replace","toLowerCase","charAt","toUpperCase","$on","cancel","link","answer","acmeMalarkey","malarkey","typist","typeSpeed","deleteSpeed","pauseDelay","loop","postfix","extraValues","value","type","pause","list","item","foodName","template","factory","$window","_","totalItems","currentPage","pageSize","startPage","endPage","Math","ceil","min","pages","range","service","answerService","addFoodNutritionData","foodInfo","getFoodNutritionData","getSearchResults","$http","ENV_VARS","getSearchResultsList","returnSearchResultsList","response","getSearchResultsListFail","err","error","get","ndbApiUrl","ndbApiKey","apiKey","apiUrl","getNutritionalData","getSearchResultNutritionData","id","returnNutritionalData","getNutritionalDataFail","limit","returnFoodNamesList","getFoodNamesFail","SearchController","$scope","log","goToSearchResult","MainController","classAnimation","ContactController","processContactForm","returnSendSuccessful","sendFail","post","AnswerController","runBlock","debug","run","routeConfig","$routeProvider","when","otherwise","redirectTo","config","constant","$logProvider","$httpProvider","debugEnabled","defaults","useXDomain","headers","common","$templateCache","put"],"mappings":"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","file":"scripts/app-e62f69b145.js","sourcesContent":["(function() {\n  'use strict';\n  // TODO:: Learn how to deploy this damn thing....(heroku)\n  // TODO:: Buy domain for this site and configure to heroku.\n  // TODO:: HTTPS\n  // TODO:: Add Google Analytics and Adsense - https://www.google.com/adsense/start/\n  // TODO:: Develop algorithm to dictate if given food is good or bad for you.\n  // TODO:: Each card must have an onclick that results in a final API call for that specific food (based on the UUID). This page should show all nutritional info and ingredients along with citation.\n  // TODO:: algorithm for yes or no.\n  // TODO:: hookup contact form.\n  // TODO:: write spec tests for all services, controllers and factories.\n  // TODO:: Page explaining the algorithm logic behind Foodle.\n  // TODO:: Make a list of beta testers and send invites.\n  // TODO:: Consider switching Food Data provider to these guys - https://www.labelinsight.com/developers/pricing\n\n\n  angular\n    .module('commonSenseDietApp', ['ngCookies', 'ngTouch', 'ngSanitize', 'ngMessages', 'ngAria', 'ngResource', 'ngRoute', 'envconfig.module', 'underscore']);\n\n})();\n\n(function() {\n  'use strict';\n  // This is a Directive...At a high level, directives are markers on a DOM element (such as an attribute, element name, comment or CSS class) that tell AngularJS's HTML compiler ($compile) to attach a specified behavior to that DOM element as well as default template behavior. See index.html to see the element where this directive is anchored. What does it mean to \"compile\" an HTML template? For AngularJS, \"compilation\" means attaching directives to the HTML to make it interactive. The reason we use the term \"compile\".\n\n  // To register a directive, you use the module.directive API.\n  angular\n    .module('commonSenseDietApp')\n    .directive('acmeNavbar', acmeNavbar);\n\n  /** @ngInject */\n  // Here we declare and define the Malarkey directive. malarkey is a library that came with the gulp generator. When you create a directive, it is restricted to attribute and elements only by default. In order to create directives that are triggered by class name, you need to use the restrict option. (restrict : E)\n  function acmeNavbar() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/views/partials/navbar.html',\n      controller: 'NavbarController',\n      controllerAs: 'vm',\n      bindToController: true\n    };\n\n    return directive;\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('commonSenseDietApp')\n    .directive('includeFooter', includeFooter);\n\n  /** @ngInject */\n  function includeFooter() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/views/partials/footer.html',\n      // controller: FooterController,\n      controllerAs: 'vm',\n      bindToController: true\n    };\n\n    return directive;\n  }\n})();\n\n(function() {\n  'use strict';\n\n  // Controllers are \"classes\" or \"constructor functions\" that are responsible for providing the application behavior that supports the declarative markup in the template. The recommended way of declaring Controllers is using the array notation. Unlike services, there can be many instances of the same type of controller in an application. Moreover, additional dependencies are made available to Controllers like $scope.\n    angular\n      .module('commonSenseDietApp')\n      .controller('NavbarController', NavbarController)\n\n      /** @ngInject */\n      function NavbarController(moment) {\n        // Using this pattern allows us to maintain a reference to the THIS scope as a means to 'reveal' public properties and methods for use as the 'view model'. It also has the added benefit of providing a lexical binding which can be referenced inside of closures.\n        var vm = this;\n\n        // \"vm.creation\" is avaible by directive option \"bindToController: true\"\n        vm.relativeDate = moment(vm.creationDate).fromNow();\n      }\n})();\n\n(function() {\n  'use strict';\n\n  // Controllers are \"classes\" or \"constructor functions\" that are responsible for providing the application behavior that supports the declarative markup in the template. The recommended way of declaring Controllers is using the array notation. Unlike services, there can be many instances of the same type of controller in an application. Moreover, additional dependencies are made available to Controllers like $scope.\n    angular\n      .module('commonSenseDietApp')\n      .controller('MalarkeyController', MalarkeyController)\n\n\n      /** @ngInject */\n      function MalarkeyController($log, getFoodNamesOnly) {\n        // Using this pattern allows us to maintain a reference to the THIS scope as a means to 'reveal' public properties and methods for use as the 'view model'. It also has the added benefit of providing a lexical binding which can be referenced inside of closures.\n        var vm = this;\n\n        vm.foodnameslist = [];\n\n        activate();\n\n        function activate() {\n          return getFoodNamesList().then(function() {\n            $log.info('Activated Foods List Typer');\n          });\n        }\n\n        // I have no idea how this directive has access to getFoodNamesOnly.service.js..BUT I suspect it has to do with the fact that both this directive and the service are registered to the same angular module.('commonSenseDietApp'). i.e. \"The service factory function generates the single object or function that represents the service to the rest of the application.\" - https://docs.angularjs.org/guide/services\n        function getFoodNamesList() {\n          return getFoodNamesOnly.getFoodNamesList(20).then(function(data) {\n            vm.foodnameslist = data;\n\n            return vm.foodnameslist ;\n          });\n        }\n      }\n\n})();\n\n(function() {\n  'use strict';\n\n  // This is a Directive...At a high level, directives are markers on a DOM element (such as an attribute, element name, comment or CSS class) that tell AngularJS's HTML compiler ($compile) to attach a specified behavior to that DOM element. See home.html to see the element where this directive is anchored. What does it mean to \"compile\" an HTML template? For AngularJS, \"compilation\" means attaching directives to the HTML to make it interactive.\n  angular\n    .module('commonSenseDietApp')\n    .directive('primarySearch', primarySearch);\n\n  /** @ngInject */\n  // Here we declare and define the Malarkey directive. Malarkey is an external non-angular JS library. It's set as a constant in index.constants.js. Installed via Bower.\n  function primarySearch($log, $document, $timeout, Paginator) {\n\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/views/partials/primary-search.html',\n      link: linkFunc,\n      controller: 'SearchController',\n      controllerAs: 'vm',\n      bindToController: true // because the scope is isolated\n    };\n\n    return directive;\n\n    // Here we use the malarkey library to set typespeed animation. We also pass in el, attr,(not clear where these are defined yet), the scope object native to Angular, and vm wich is 'controller-as' syntax for the MalarkeyContoller defined in the directive.\n    function linkFunc(scope, el, attr, vm) {\n      // This event handler is called by the ngKeyup directive in home.html and primary-search.html.\n      vm.handleKeyupEvent = function() {\n        // Wait until search input value is defined and longer than 4 characters before initiating API search.\n        if(vm.searchterm && vm.searchterm.length >= 4) {\n          initializeSearch();\n        }\n      };\n\n      var timer;\n      vm.pager = {};\n      vm.setPage = setPage;\n      vm.totalResults = 0;\n\n      function initializeSearch() {\n\n        // Apply jqLite events to DOM selectors. Places the searchbar in top left corner of page on keyup then init API service methods and employ our Paginator service.\n        angular.element($document[0].querySelector('#wrapper')).addClass('not-visible');\n        angular.element($document[0].querySelector('#move-searchbar')).removeClass('searchbar-container').addClass('global-searchbar-container');\n        angular.element($document[0].querySelector('.home-buttons')).addClass('not-visible');\n        angular.element($document[0].querySelector('.search-results-container')).removeClass('not-visible');\n        angular.element($document[0].querySelector('.navbar')).addClass('lightgrey-bg').addClass('bottom-border-grey');\n        angular.element($document[0].querySelector('.search-icon')).removeClass('not-visible');\n\n        // It takes a split second for the view model to update with the entire input value thus the timeout below..must refactor this! Research onkeyup \"view-model\" updates.\n        timer = $timeout(function() {\n          return vm.activate(vm.searchterm).then(function() {\n            $log.info('Polling API');\n          });\n        }, 500);\n\n      }\n\n      // Watch for the API query data array to come in. Once defined, format it and make it available to the 'view-model'.\n      var watcher = scope.$watch('vm.searchresultsarray', function() {\n        // vm.searchresultsarray will be undefined until the $destroy event below.\n        if(!vm.searchresultsarray) {\n          vm.searchresultsarray = [];\n        }\n\n        // TODO:: employ smarter string filtering..maybe lib or native helper\n        angular.forEach(vm.searchresultsarray, function(searchResult) {\n          searchResult.name = searchResult.name.split(/UPC:|gtin:/g)[0].replace(/\\,/g,\"\").toLowerCase();\n\n          searchResult.name = searchResult.name.charAt(0).toUpperCase() + searchResult.name.slice(1);\n        });\n\n        // Invoke pagination via \"setPage()\" function below. Once search results are in, display search results via Paginator service.\n        if (vm.searchresultsarray.length > 0) {\n          vm.setPage(1, vm.searchresultsarray.length);\n        }\n      });\n\n      // Paginate search results using our Paginator.service.js and then render to DOM.\n      function setPage(page, length) {\n        if(page < 1 || page > vm.pager.totalPages) {\n          return;\n        }\n        // total number of search results\n        vm.totalResults = length;\n        // current page\n        vm.page = page;\n        // get pager object from service\n        vm.pager = Paginator.getPaginator(length, page);\n        // get current page of items\n        vm.items =  vm.searchresultsarray.slice(vm.pager.startIndex, vm.pager.endIndex + 1);\n      }\n\n      // Always be sure to cancel out your $timeouts at the $destroy event.\n      scope.$on('$destroy', function () {\n        watcher();\n        $timeout.cancel(timer);\n      });\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  // This is a Directive...At a high level, directives are markers on a DOM element (such as an attribute, element name, comment or CSS class) that tell AngularJS's HTML compiler ($compile) to attach a specified behavior to that DOM element. See home.html to see the element where this directive is anchored. What does it mean to \"compile\" an HTML template? For AngularJS, \"compilation\" means attaching directives to the HTML to make it interactive.\n  angular\n    .module('commonSenseDietApp')\n    .directive('answer', answer);\n\n  /** @ngInject */\n  // Here we declare and define the Malarkey directive. Malarkey is an external non-angular JS library. It's set as a constant in index.constants.js. Installed via Bower.\n  function answer() {\n\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/views/pages/answer.html',\n      link: linkFunc,\n      controller: 'SearchController',\n      controllerAs: 'vm',\n      bindToController: true // because the scope is isolated\n    };\n\n    return directive;\n\n    // Here we use the malarkey library to set typespeed animation. We also pass in el, attr,(not clear where these are defined yet), the scope object native to Angular, and vm wich is 'controller-as' syntax for the MalarkeyContoller defined in the directive.\n    function linkFunc(scope, el, attr, vm) {\n\n\n\n\n\n\n\n      // Always be sure to cancel out your $timeouts at the $destroy event.\n      // scope.$on('$destroy', function () {\n      //   watcher();\n      //   $timeout.cancel(timer);\n      // });\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  // This is a Directive...At a high level, directives are markers on a DOM element (such as an attribute, element name, comment or CSS class) that tell AngularJS's HTML compiler ($compile) to attach a specified behavior to that DOM element. See home.html to see the element where this directive is anchored. What does it mean to \"compile\" an HTML template? For AngularJS, \"compilation\" means attaching directives to the HTML to make it interactive.\n  angular\n    .module('commonSenseDietApp')\n    .directive('acmeMalarkey', acmeMalarkey);\n\n  /** @ngInject */\n  // Here we declare and define the Malarkey directive. malarkey is a library that came with the gulp generator. I'm not exactly sure what it does yet but it's passed here to acmeMalarkey as an argument and used later on in linkFunc(). When you create a directive, it is restricted to attribute and elements only by default. In order to create directives that are triggered by class name, you need to use the restrict option. (restrict : E)\n  function acmeMalarkey(malarkey) {\n    var directive = {\n      restrict: 'E',\n      scope: {\n        extraValues: '='\n      },\n      template: '&nbsp;',\n      link: linkFunc,\n      controller: 'MalarkeyController',\n      controllerAs: 'vm',\n      bindToController: true // because the scope is isolated\n    };\n\n    return directive;\n\n    // Here we use the malarkey library to set typespeed animation. We also pass in el, attr,(not clear where these are defined yet), the scope object native to Angular, and vm wich is 'controller-as' syntax for the MalarkeyContoller defined in the directive.\n    function linkFunc(scope, el, attr, vm) {\n      var typist = malarkey(el[0], {\n        typeSpeed: 80,\n        deleteSpeed: 60,\n        pauseDelay: 4000,\n        loop: true,\n        postfix: ' '\n      });\n\n      // Here I believe we are setting our directive to a class selector as opposed to a template.\n      el.addClass('acme-malarkey');\n\n      // This iterates over extra food values specified in the directive as an attribute.\n      angular.forEach(vm.extraValues, function(value) {\n        typist.type(value).pause().delete();\n      });\n\n      // vm.foodnameslist is an array defined below in the MalarkeyController. Much like the forEach above, this one loops through the foodnameslist array (the data returned from our API service) and calls typist to animate the typing of each item on the home page. Notice it is not called until the $destroy event.\n      var watcher = scope.$watch('vm.foodnameslist', function() {\n        // vm.contributors will be undefined until $destroy.\n        if(!vm.foodnameslist.list) {\n          vm.foodnameslist.list = [];\n        }\n\n        angular.forEach(vm.foodnameslist.list.item, function(foodName) {\n          // TODO:: employ smarter string filtering..maybe lib or native helper\n          foodName = foodName.name.split('UPC')[0].replace(/\\,/g,\"\").toLowerCase();\n\n          typist.type(foodName).pause().delete();\n        });\n      });\n\n      // This calls the watcher() above when the destroy event is triggered. Removes the current scope (and all of its children) from the parent scope. Removal implies that calls to $digest() will no longer propagate to the current scope and its children. Removal also implies that the current scope is eligible for garbage collection.The $destroy() is usually used by directives such as ngRepeat for managing the unrolling of the loop. Just before a scope is destroyed, a $destroy event is broadcasted on this scope. Application code can register a $destroy event handler that will give it a chance to perform any necessary cleanup.\n      scope.$on('$destroy', function () {\n        watcher();\n      });\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('underscore', [])\n    .factory('_', ['$window', function($window) {\n\n      return $window._;\n\n    }]);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('commonSenseDietApp')\n    .factory('Paginator', Paginator);\n\n  /** @ngInject */\n  // Angular services are substitutable objects that are wired together using dependency injection(DI). You can use services to organize and share code across your app via global templating.\n  function Paginator(_) {\n    // Service definition\n    var service = {\n      getPaginator: getPaginator\n    };\n\n    return service;\n\n    function getPaginator(totalItems, currentPage, pageSize) {\n\n      // Default to first page\n      currentPage = currentPage || 1;\n\n      // Default page size is 10\n      pageSize = pageSize || 10;\n\n      // Calculate total pages and instatiate empty variables.\n      var totalPages = Math.ceil(totalItems/pageSize);\n      var startPage;\n      var endPage;\n\n      if (totalPages <= 10 ) {\n        // Only show less than or exactly 10 if there are only 10 pages needed.\n        startPage = 1;\n        endPage = totalPages;\n      } else {\n        // Show more than 10 pages so calculate start and end pages\n        if (currentPage <= 6) {\n          startPage = 1;\n          endPage = 10;\n        } else if(currentPage + 4 >= totalPages) {\n          startPage = totalPages - 9;\n          endPage = totalPages;\n        } else {\n          startPage = currentPage - 5;\n          endPage = currentPage + 4;\n        }\n      }\n\n      // Calculate start and end item indexes\n      var startIndex = (currentPage - 1) * pageSize;\n      var endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\n\n      // Create an array of pages to ng-repeat in the pager controls\n      var pages = _.range(startPage, endPage + 1);\n\n      // Return object with all pager properties required by the view-model\n        return {\n            totalItems: totalItems,\n            currentPage: currentPage,\n            pageSize: pageSize,\n            totalPages: totalPages,\n            startPage: startPage,\n            endPage: endPage,\n            startIndex: startIndex,\n            endIndex: endIndex,\n            pages: pages\n        };\n\n    }\n  }\n})();\n\n\n(function() {\n  'use strict';\n\n  angular\n    .module('commonSenseDietApp')\n    .factory('answerService', answerService);\n\n  /** @ngInject */\n  // Angular services are substitutable objects that are wired together using dependency injection(DI). This particular service is being treated like a constructor and is essentially returning an instance of\n  function answerService() {\n    // Service definition\n    var service = {\n      addFoodNutritionData: addFoodNutritionData,\n      getFoodNutritionData: getFoodNutritionData\n    };\n\n    return service;\n\n    var foodInfo;\n\n    function addFoodNutritionData(data) {\n      if(data) {\n        foodInfo = data;\n      }\n    }\n\n    function getFoodNutritionData() {\n      foodInfo;\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  // Application developers are free to define their own services by registering the service's name and service factory function, with an Angular module. This makes it available to the rest of the app.\n  angular\n    .module('commonSenseDietApp')\n    .factory('getSearchResults', getSearchResults);\n\n  /** @ngInject */\n  // Angular services are substitutable objects that are wired together using dependency injection(DI). You can use services to organize and share code across your app via global templating.\n  function getSearchResults($log, $http, ENV_VARS) {\n\n    // Here we define a service and a method function and access our API variables from .env.\n    var service = {\n      ndbApiKey: ENV_VARS.apiKey,\n      ndbApiUrl: ENV_VARS.apiUrl,\n      getSearchResultsList: getSearchResultsList\n    }\n\n    return service;\n\n    // Here we define the service's main functionality. This is defined inside malarkey.directive.js as a integer which is also where this function gets invoked.\n    function getSearchResultsList(searchterm) {\n\n      // Here we hit the NDB search API using our .env variables but not without concatenating our searchterm query and our API key. We utilize an angular try-catch and depending on if successful or not we display error or return the data to search.contrller.js. For a list of all query parameters and settings visit - https://ndb.nal.usda.gov/ndb/doc/apilist/API-SEARCH.md\n      return $http.get(service.ndbApiUrl + '/ndb/search/?format=json&q=' + searchterm + '&sort=r&api_key=' + service.ndbApiKey)\n          .then(returnSearchResultsList)\n          .catch(getSearchResultsListFail);\n\n\n      function returnSearchResultsList(response) {\n        return response.data;\n      }\n\n      function getSearchResultsListFail(err) {\n        return $log.error(err.data);\n      }\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  // Application developers are free to define their own services by registering the service's name and service factory function, with an Angular module. This makes it available to the rest of the app.\n  angular\n    .module('commonSenseDietApp')\n    .factory('getNutritionalData', getNutritionalData);\n\n  /** @ngInject */\n  // Angular services are substitutable objects that are wired together using dependency injection(DI). You can use services to organize and share code across your app via global templating.\n  function getNutritionalData($log, $http, ENV_VARS) {\n\n    // Here we define a service and a method function and access our API variables from .env.\n    var service = {\n      ndbApiKey: ENV_VARS.apiKey,\n      ndbApiUrl: ENV_VARS.apiUrl,\n      getSearchResultNutritionData: getSearchResultNutritionData\n    }\n\n    return service;\n\n    // Here we define the service's main functionality. This is defined inside malarkey.directive.js as a integer which is also where this function gets invoked.\n    function getSearchResultNutritionData(id) {\n\n      // Here we hitting the NDB search API using our .env variables but not without concatenating our search query and our API key. We utilize an angular try-catch and depending on if successful or not we display error or return the data to search.contrller.js. For a list of all query parameters and settings visit - https://ndb.nal.usda.gov/ndb/doc/apilist/API-SEARCH.md\n      return $http.get(service.ndbApiUrl + '/ndb/reports/?ndbno=' + id + '&type=b&format=json&api_key=' + service.ndbApiKey)\n          .then(returnNutritionalData)\n          .catch(getNutritionalDataFail);\n\n      function returnNutritionalData(response) {\n        return response.data;\n      }\n\n      function getNutritionalDataFail(err) {\n        return $log.error(err.data);\n      }\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  // Application developers are free to define their own services by registering the service's name and service factory function, with an Angular module. This makes it available to the rest of the app.\n  angular\n    .module('commonSenseDietApp')\n    .factory('getFoodNamesOnly', getFoodNamesOnly);\n\n  /** @ngInject */\n  // Angular services are substitutable objects that are wired together using dependency injection(DI). You can use services to organize and share code across your app via global templating.\n  function getFoodNamesOnly($log, $http, ENV_VARS) {\n\n    // Here we define a service and a method function and access our API variables from .env.\n    var service = {\n      ndbApiKey: ENV_VARS.apiKey,\n      ndbApiUrl: ENV_VARS.apiUrl,\n      getFoodNamesList: getFoodNamesList\n    }\n\n    return service;\n\n    // Here we define the service's main functionality. Notice we pass in 'limit' as an argument. This is defined inside malarkey.directive.js as a integer which is also where this function gets invoked.\n    function getFoodNamesList(limit) {\n      // If no limit passed then just manually set limit to avoid undefined.\n      if(!limit) {\n        limit = 30;\n      }\n\n      // Here we calling the NDB Food List API using our .env variables but not without concatenating a limit integer and our API key. We utilize an angular try-catch and depending on if successful or not we display error getFoodNamesFail() or return data returnFoodNamesList() to malarkey.controller.js. For a list of all request parameters visit - https://ndb.nal.usda.gov/ndb/doc/apilist/API-LIST.md\n      return $http.get(service.ndbApiUrl + '/ndb/list?format=json&It=f' + '&max=' + limit + '&sort=n&offset=15&api_key=' + service.ndbApiKey)\n          .then(returnFoodNamesList)\n          .catch(getFoodNamesFail);\n\n\n      function returnFoodNamesList(response) {\n        return response.data;\n      }\n\n      function getFoodNamesFail(err) {\n        return $log.error(err.data);\n      }\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  // Controllers are \"classes\" or \"constructor functions\" that are responsible for providing the application behavior that supports the declarative markup in the template. The recommended way of declaring Controllers is using the array notation. Unlike services, there can be many instances of the same type of controller in an application. Moreover, additional dependencies are made available to Controllers like $scope.\n  angular\n    .module('commonSenseDietApp')\n    .controller('SearchController', SearchController);\n\n\n  function SearchController($document, $scope, getSearchResults, $log, getNutritionalData, answerService){\n    // Using this pattern allows us to maintain a reference to the THIS scope as a means to 'reveal' public properties and methods for use as the 'view model'. It also has the added benefit of providing a lexical binding which can be referenced inside of closures!\n    var vm = this;\n\n    vm.searchresultsarray = [];\n\n    /* For Search Results Listing -\n     *\n     * Called from search.directive.js upon ngkeyup. It will take the search query and init a new API call to get data from getSearchResults.service.js and set what gets returned to the \"view-model\".\n     */\n    vm.activate = function(searchterm) {\n      return getSearchResults.getSearchResultsList(searchterm).then(function(data) {\n        // This check is flawed. Haven't been able to fix. Still working on it.\n        if(data) {\n          vm.searchresultsarray = data.list.item;\n\n          return vm.searchresultsarray;\n        } else {\n\n          $log.log('....loading API results');\n        }\n      });\n    }\n\n\n    /* For Nutritional Breakdown Page -\n     *\n     * This is a click event handler for the primary-search.html template (ngclick). When a search result is clicked on it will take that result's ID (ndbno) and init a new API call to grab the rest of the nutritional data for that specific food.\n     */\n    vm.goToSearchResult = function(id) {\n\n      return getNutritionalData.getSearchResultNutritionData(id).then(function(data) {\n        // This check is flawed. Haven't been able to fix. Still working on it.\n        if(data) {\n          // Send data to custom service answer.service.js and share service with answer.controller.js. Best way to share data between controllers.\n          answerService.addFoodNutritionData(data);\n        } else {\n\n          $log.log('....fail');\n        }\n      });\n    }\n\n  }\n})();\n\n(function() {\n  'use strict';\n\n  // Controllers are \"classes\" or \"constructor functions\" that are responsible for providing the application behavior that supports the declarative markup in the template. The recommended way of declaring Controllers is using the array notation. Unlike services, there can be many instances of the same type of controller in an application. Moreover, additional dependencies are made available to Controllers like $scope.\n  angular\n    .module('commonSenseDietApp')\n    .controller('MainController', MainController);\n\n  /** @ngInject */\n  function MainController($timeout, $scope) {\n    // Using this pattern allows us to maintain a reference to the THIS scope as a means to 'reveal' public properties and methods for use as the 'view model'. It also has the added benefit of providing a lexical binding which can be referenced inside of closures.\n    var vm = this;\n\n\n    vm.classAnimation = '';\n    vm.creationDate = 1450389822870;\n\n    activate();\n    // this timeout needs to be canceled!\n    function activate() {\n      $timeout(function() {\n        vm.classAnimation = 'pulse';\n      }, 10000);\n    }\n\n    $scope.$on('$destroy', function () {\n      $timeout.cancel(activate)\n    });\n  }\n})();\n\n(function() {\n  'use strict';\n\n\tangular\n\t\t.module('commonSenseDietApp')\n\t\t.controller('ContactController', ContactController);\n\n\n\tfunction ContactController($http, $log) {\n\t\t// controllerAs syntax\n\t\tvar vm = this;\n\n    vm.processContactForm = function() {\n      // Further form validation.\n      // $log.log(vm.email);\n\n      return $http.post('/submitContactUsForm')\n          .then(returnSendSuccessful)\n          .catch(sendFail);\n\n\n      function returnSendSuccessful(response) {\n        return response.data;\n      }\n\n      function sendFail(err) {\n        return $log.error(err.data);\n      }\n    }\n\n\n\t}\n\n})();\n\n(function() {\n  'use strict';\n\n  // Controllers are \"classes\" or \"constructor functions\" that are responsible for providing the application behavior that supports the declarative markup in the template. The recommended way of declaring Controllers is using the array notation. Unlike services, there can be many instances of the same type of controller in an application. Moreover, additional dependencies are made available to Controllers like $scope.\n  angular\n    .module('commonSenseDietApp')\n    .controller('AnswerController', AnswerController);\n\n\n  function AnswerController($log, answerService){\n    // Using this pattern allows us to maintain a reference to the THIS scope as a means to 'reveal' public properties and methods for use as the 'view model'. It also has the added benefit of providing a lexical binding which can be referenced inside of closures!\n    var vm = this;\n\n    vm.foodInfo = answerService.getFoodNutritionData();\n\n    $log.log(vm.foodInfo);\n  }\n})();\n\n(function() {\n  'use strict';\n\n  // We can specify functions (Module Methods) to run at configuration and run time for a module by calling the config and run methods. These functions are injectable with dependencies(DI).\n  angular\n    .module('commonSenseDietApp')\n    .run(runBlock);\n\n  /** @ngInject */\n  function runBlock($log) {\n\n    $log.debug('runBlock end');\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('commonSenseDietApp')\n    .config(routeConfig);\n\n  function routeConfig($routeProvider) {\n    // Home Page\n    $routeProvider\n      .when('/', {\n        templateUrl: 'app/views/pages/home.html',\n        controller: 'MainController',\n        controllerAs: 'vm'\n      })\n      .otherwise({\n        redirectTo: '/'\n      });\n\n    // Contact Us Page\n    $routeProvider\n    .when('/contact', {\n      templateUrl: 'app/views/pages/contact.html',\n      controller: 'ContactController',\n      controllerAs: 'vm'\n    })\n    .otherwise({\n      redirectTo: '/'\n    });\n\n    // Contact Us Page\n    $routeProvider\n    .when('/answer?', {\n      templateUrl: 'app/views/pages/answer.html',\n      controller: 'answerController',\n      controllerAs: 'vm'\n    })\n    .otherwise({\n      redirectTo: '/'\n    });\n\n    // About Page\n    $routeProvider\n      .when('/about', {\n        templateUrl: 'app/views/pages/about.html'\n      })\n      .otherwise({\n        redirectTo: '/'\n      });\n\n    // Disclaimer Page\n    $routeProvider\n      .when('/disclaimer', {\n        templateUrl: 'app/views/pages/disclaimer.html'\n      })\n      .otherwise({\n        redirectTo: '/'\n      });\n\n    // Privacy Policy Page\n    $routeProvider\n      .when('/privacy-policy', {\n        templateUrl: 'app/views/pages/privacy-policy.html'\n      })\n      .otherwise({\n        redirectTo: '/'\n      });\n  }\n\n})();\n\n/*\n   global malarkey:false,\n   moment:false\n*/\n(function() {\n  'use strict';\n\n  angular\n    .module('commonSenseDietApp')\n    .constant('malarkey', malarkey)\n    .constant('moment', moment);\n\n})();\n\n(function() {\n  'use strict';\n\n  // We can specify functions (Module Methods) to run at configuration and run time for a module by calling the config and run methods. These functions are injectable with dependencies(DI).\n  angular\n    .module('commonSenseDietApp')\n    .config(config);\n\n  /** @ngInject */\n  function config($logProvider, $httpProvider) {\n    // Enable log\n    $logProvider.debugEnabled(true);\n\n    // For Access-Control-Allow-Origin and Set-Cookie header\n    $httpProvider.defaults.useXDomain = true;\n    $httpProvider.defaults.headers.common = 'Content-Type: application/json';\n    delete $httpProvider.defaults.headers.common['X-Requested-With'];\n  }\n\n})();\n\nangular.module(\"envconfig.module\", [])\n.constant(\"ENV_VARS\", {\"apiUrl\":\"http://api.nal.usda.gov\",\"apiKey\":\"oSZ9f2ly7gkJo0A7fcRtd9z6AEGJaXIgPhNM6lhV\",\"debug\":true});\n\nangular.module(\"commonSenseDietApp\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/views/pages/about.html\",\"<section class=\\\"about-content\\\"><div class=\\\"about-copy-container\\\"><h1 class=\\\"about-header\\\">Eating Healthy is Simple...Right?</h1><p class=\\\"about-copy\\\">We\\'ve all heard of the Atkins diet and the Paleo diet and the raw foods diet and the blood type diet and the cigarette diet and the baby food diet and the WWII rations diet but come on! Hasn\\'t it all gotten just a bit too riduculous? <span class=\\\"highlight\\\">Since when did eating healthy become so complicated?</span> What in the world happened to common sense?</p><p class=\\\"about-copy\\\">We created Foodle because we believe that you don\\'t need a crazy diet fad to eat well. <span class=\\\"highlight\\\">Simply search any food, beverage or meal and get a big fat</span> <span>YES</span> or <span>NO</span> response...That\\'s it!<br></p><p class=\\\"about-copy\\\">What do we actually know about nutrition?... Uh nothing. We simply BELIEVE that eating healthy isn\\'t complicated (not to mention our kickass <a href=\\\"#\\\">algorithm</a> based on nutrional data from the <a href=\\\"#\\\">USDA National Nutrient Database for Standard Reference</a>). Is a cheeseburger good for you? <span>NO!</span> Is an apple good for you? <span>YES!</span><br></p><p class=\\\"about-copy\\\">See how easy that was! Some might call it common sense...but then again common sense isn\\'t so common is it? Why follow some crazy, out-of-the-box diet fad you can\\'t stick to anyways? Before you eat something, <span class=\\\"highlight\\\">just Foodle it.</span></p></div></section><include-footer></include-footer>\");\n$templateCache.put(\"app/views/pages/answer.html\",\"\");\n$templateCache.put(\"app/views/pages/contact.html\",\"<section><div class=\\\"contact-us-title\\\"><h1>Contact Us</h1></div><form class=\\\"contact-us-form\\\" name=\\\"contactUsForm\\\" ng-submit=\\\"vm.processContactForm()\\\"><div class=\\\"form-group\\\"><input placeholder=\\\"name\\\" type=\\\"text\\\" name=\\\"name\\\" ng-model=\\\"vm.name\\\" class=\\\"form-control\\\" required=\\\"\\\"> <span class=\\\"label label-danger\\\" ng-show=\\\"vm.submitted && contact-us-form.name.$error.required\\\">Required!</span></div><div class=\\\"form-group\\\"><input placeholder=\\\"Email\\\" type=\\\"email\\\" name=\\\"email\\\" ng-model=\\\"vm.email\\\" class=\\\"form-control\\\" required=\\\"\\\"> <span class=\\\"label label-danger\\\" ng-show=\\\"vm.submitted && contact-us-form.email.$error.required\\\">Required!</span> <span class=\\\"label label-danger\\\" ng-show=\\\"vm.submitted && contact-us-form.$error.email\\\">Invalid email!</span></div><div class=\\\"form-group\\\"><input name=\\\"headline\\\" placeholder=\\\"Headline\\\" type=\\\"text\\\" ng-model=\\\"vm.headline\\\" class=\\\"form-control\\\" required=\\\"\\\"> <span class=\\\"label label-danger\\\" ng-show=\\\"vm.submitted && contact-us-form.headline.$error.required\\\">Required!</span></div><div class=\\\"form-group\\\"><textarea name=\\\"message\\\" placeholder=\\\"Message\\\" type=\\\"textbox\\\" ng-model=\\\"vm.message\\\" class=\\\"form-control\\\" required=\\\"\\\"></textarea> <span class=\\\"label label-danger\\\" ng-show=\\\"vm.submitted && contact-us-form.subjectList.$error.required\\\">Required!</span></div><input type=\\\"submit\\\" id=\\\"submit-contact-form-btn\\\"></form></section><include-footer></include-footer>\");\n$templateCache.put(\"app/views/pages/disclaimer.html\",\"<section class=\\\"disclaimer-content\\\"><div class=\\\"disclaimer-copy-container\\\"><h1 class=\\\"disclaimer-header\\\">Disclaimer</h1><p class=\\\"disclaimer-copy\\\">We admit we know nothing about healthy dietary practices and overall food consumption. We also do not recommend you use our service as a means to follow a strict diet without first consulting with your doctor. Any advice you find on our site does not consider prior existing medical conditions such as diabetes, heart-disease or any and all medical conditions. Our search results and advice is completely biased and in no way reflects any empirical or medical research or dietary expertise. You use this site at your own risk and in using it, agree to not hold us liable for any consquences from decisions made on your behalf as a results of using this website and/or service.</p></div></section>\");\n$templateCache.put(\"app/views/pages/home.html\",\"<section class=\\\"home-container\\\"><div id=\\\"wrapper\\\" class=\\\"jumbotron\\\"><div class=\\\"header-container\\\"><ul class=\\\"header-list\\\"><li class=\\\"header\\\"><img src=\\\"../../../assets/images/text-logo-5.png\\\"></li><li><p class=\\\"sub-header\\\">A simple, yes or no response to the question. Is<acme-malarkey extra-values=\\\"[\\'agave\\', \\'olive oil\\', \\'whole milk\\']\\\"></acme-malarkey>good for me? <a href=\\\"http://www.urbandictionary.com/define.php?term=Goodle\\\">*</a></p></li><ul></ul></ul></div></div><primary-search></primary-search><div class=\\\"home-buttons\\\"><div class=\\\"animated infinite\\\" ng-class=\\\"vm.classAnimation\\\"><a ng-click=\\\"vm.handleKeyupEvent()\\\" class=\\\"btn btn-lg btn-success\\\">SEARCH</a></div><div class=\\\"animated infinite\\\" ng-class=\\\"vm.classAnimation\\\"><a class=\\\"btn btn-lg btn-success\\\" href=\\\"#/about\\\">UH..</a></div></div></section>\");\n$templateCache.put(\"app/views/pages/privacy-policy.html\",\"<section class=\\\"privacy-policy-content\\\"><div class=\\\"privacy-policy-container\\\"><h1 class=\\\"privacy-policy-header\\\">Privacy Policy</h1><p class=\\\"privacy-policy-copy\\\">This privacy policy discloses the privacy practices for Foodle.com, commonSenseDietApp. This privacy policy applies solely to information collected by this web site and certain third parties mentioned here after. It will notify you of the following:</p><ul class=\\\"privacy-policy-copy-list\\\"><li><p class=\\\"privacy-policy-copy\\\">What personally identifiable information is collected from you through the web site, how it is used and with whom it may be shared.</p></li><li><p class=\\\"privacy-policy-copy\\\">What choices are available to you regarding the use of your data.</p></li><li><p class=\\\"privacy-policy-copy\\\">The security procedures in place to protect the misuse of your information.</p></li></ul><h2 class=\\\"privacy-policy-subheader\\\">Information Collection, Use, and Sharing</h2><p class=\\\"privacy-policy-copy\\\">We are the sole owners of any information collected from you via this site. We only have access to collect information that you voluntarily give us via email or other direct contact from you. We will not sell or rent this information to anyone at anytime under any circumstances unless upon receiving a valid request from you to release your data only and your data only.</p><p class=\\\"privacy-policy-copy\\\">We are the sole owners of any information collected from you via this site. Currently we only have access to collect information that you voluntarily give us via email or other direct contact from you. We will not sell, rent give or show this information to anyone at anytime under any circumstances unless upon receiving a valid request from you to release your data only and your data only. Be aware that although we do not collect any data from you at this time we do employ third-party technologies and work with third-party vendors that may use cookies to serve ads based on a user\\'s prior visits. This is discussed in further detail below.</p><p class=\\\"privacy-policy-copy\\\">We will use your information to respond to you, regarding the reason you contacted us. We will not share your information with any third party outside of our organization, other than as necessary to fulfill your request, e.g. to ship an order or answer a suppor ticket.</p><p class=\\\"privacy-policy-copy\\\">Unless you ask us not to, we may contact you via email (only if you have provided us your email before by contacting us) in the future to tell you about specials, new products or services, or changes to this privacy policy.</p><h2 class=\\\"privacy-policy-subheader\\\">Your Access to and Control Over Information</h2><p class=\\\"privacy-policy-copy\\\">You may opt out of any future contacts from us at any time. You can do the following at any time by contacting us via the contact form on our website:</p><ul class=\\\"privacy-policy-copy-list\\\"><li><p class=\\\"privacy-policy-copy\\\">See what data we have about you, if any.</p></li><li><p class=\\\"privacy-policy-copy\\\">Change/correct any data we have about you.</p></li><li><p class=\\\"privacy-policy-copy\\\">Have us delete any data we have about you.</p></li><li><p class=\\\"privacy-policy-copy\\\">Express any concern you have about our use of your data</p></li></ul><h2 class=\\\"privacy-policy-subheader\\\">Security</h2><p class=\\\"privacy-policy-copy\\\">We take precautions to protect your information. When you submit sensitive information via the website, your information is protected both online and offline.</p><p class=\\\"privacy-policy-copy\\\">Wherever we collect sensitive information (such as credit card data or email addresses), that information is encrypted and transmitted to us in a secure way. You can verify this by looking for a closed lock icon at the bottom of your web browser, or by looking for \\\"https\\\" at the beginning of the address URL of our web page.</p><p class=\\\"privacy-policy-copy\\\">While we use encryption to protect sensitive information transmitted online, we also protect your information offline. Only employees who need the information to perform a specific job (for example, billing or customer service) are granted access to personally identifiable information. The computers/servers in which we store personally identifiable information are kept in a secure environment.</p><h2 class=\\\"privacy-policy-subheader\\\">Cookies and Third-Party Vendors</h2><p class=\\\"privacy-policy-copy\\\">We work with third-party vendors that use \\\"cookies\\\" on this site (mainly Google). A cookie is a piece of data stored on a site visitor\\'s hard drive to help improve access to the site and identify repeat visits. Cookies can enable sites to track and target the interests of users to enhance their site experience. Usage of these cookie is in no way linked to any personally identifiable information about you, the user. Third party vendors, including Google, use cookies on this website to serve ads based on our users\\' prior visits to this site or other websites. Google\\'s use of advertising cookies enables it and its partners to serve ads to your users based on their visit to your sites and/or other sites on the Internet. Users may opt out of personalized advertising by visiting <a href=\\\"https://www.google.com/settings/u/0/ads/authenticated\\\">Ad Settings</a>. Alternatively users can opt out of a third-party vendor\\'s use of cookies for personalized advertising by visiting <a href=\\\"www.aboutads.info\\\">www.aboutads.info</a>.</p><h2 class=\\\"privacy-policy-subheader\\\">Links</h2><p class=\\\"privacy-policy-copy\\\">This web site contains links to other sites. Please be aware that we are not responsible for the content or privacy practices of such other sites. We encourage our users to be aware when they leave our site and to read the privacy statements of any other site that collects personally identifiable information.</p></div></section><include-footer></include-footer>\");\n$templateCache.put(\"app/views/pages/submitNewFood.html\",\"<section class=\\\"new-food-content\\\"><div class=\\\"submit-new-food-title\\\"><h1>Submit a New Food</h1><p>Before submitting a food be sure to search for it first!<br>We might already have it in our database.</p></div><form class=\\\"submit-food-form\\\" ng-submit=\\\"newFood.submitFood()\\\"><input placeholder=\\\"Food Name\\\" ,=\\\"\\\" type=\\\"text\\\" class=\\\"name-input\\\" ng-model=\\\"newFood.formData.foodName\\\"> <input placeholder=\\\"Food ID\\\" ,=\\\"\\\" type=\\\"text\\\" class=\\\"id-input\\\" ng-model=\\\"newFood.formData.foodId\\\"> <input placeholder=\\\"Food Group\\\" ,=\\\"\\\" type=\\\"text\\\" class=\\\"food-group-input\\\" ng-model=\\\"newFood.formData.foodGroup\\\"> <input placeholder=\\\"Yes, No or Maybe\\\" ,=\\\"\\\" type=\\\"text\\\" class=\\\"answer-input\\\" ng-model=\\\"newFood.formData.answer\\\"> <input placeholder=\\\"Reason Why\\\" ,=\\\"\\\" type=\\\"text\\\" class=\\\"carbs-input\\\" ng-model=\\\"newFood.formData.reasoning\\\"> <input placeholder=\\\"serving size\\\" ,=\\\"\\\" type=\\\"number\\\" class=\\\"serving-size-input\\\" ng-model=\\\"newFood.formData.servingSize\\\"> <input placeholder=\\\"calories\\\" ,=\\\"\\\" type=\\\"number\\\" class=\\\"name-input\\\" ng-model=\\\"newFood.formData.calories\\\"> <input placeholder=\\\"total fat\\\" ,=\\\"\\\" type=\\\"number\\\" class=\\\"total-fat-input\\\" ng-model=\\\"newFood.formData.totalFat\\\"> <input placeholder=\\\"Trans Fat\\\" ,=\\\"\\\" type=\\\"number\\\" class=\\\"trans-fat-input\\\" ng-model=\\\"newFood.formData.transFat\\\"> <input placeholder=\\\"saturated fat\\\" ,=\\\"\\\" type=\\\"number\\\" class=\\\"saturated-fat-input\\\" ng-model=\\\"newFood.formData.saturatedFat\\\"> <input placeholder=\\\"cholesterol\\\" ,=\\\"\\\" type=\\\"number\\\" class=\\\"cholesterol-input\\\" ng-model=\\\"newFood.formData.cholesterol\\\"> <input placeholder=\\\"protein\\\" ,=\\\"\\\" type=\\\"number\\\" class=\\\"protein-input\\\" ng-model=\\\"newFood.formData.protein\\\"> <input placeholder=\\\"sodium\\\" ,=\\\"\\\" type=\\\"number\\\" class=\\\"sodium-input\\\" ng-model=\\\"newFood.formData.sodium\\\"> <input placeholder=\\\"carbohydrates\\\" ,=\\\"\\\" type=\\\"number\\\" class=\\\"carbs-input\\\" ng-model=\\\"newFood.formData.carbs\\\"> <input placeholder=\\\"sugar\\\" ,=\\\"\\\" type=\\\"number\\\" class=\\\"sugar-input\\\" ng-model=\\\"newFood.formData.sugar\\\"> <input placeholder=\\\"fiber\\\" ,=\\\"\\\" type=\\\"number\\\" class=\\\"fiber-input\\\" ng-model=\\\"newFood.formData.fiber\\\"> <input type=\\\"checkbox\\\" value=\\\"vegetarian\\\" ng-model=\\\"newFood.formData.vegetarian\\\"> vegetarian <input type=\\\"checkbox\\\" value=\\\"gluten-free\\\" ng-model=\\\"newFood.formData.glutenFree\\\"> gluten free <input type=\\\"checkbox\\\" value=\\\"vegan\\\" ng-model=\\\"newFood.formData.vegan\\\"> vegan <input type=\\\"checkbox\\\" value=\\\"nut-free\\\" ng-model=\\\"newFood.formData.nutFree\\\"> nut free <input type=\\\"submit\\\" id=\\\"submit-new-food-btn\\\"></form></section>\");\n$templateCache.put(\"app/views/partials/footer.html\",\"<section class=\\\"footer-content\\\"><div class=\\\"footer-nav-container\\\"><ul class=\\\"footer-nav-list\\\"><li><a ng-href=\\\"#/\\\">home</a></li><li><a ng-href=\\\"#/about\\\">about</a></li><li><a ng-href=\\\"#/contact\\\">contact us</a></li><li><a ng-href=\\\"#/privacy-policy\\\">privacy policy</a></li></ul></div><div id=\\\"scrolled-to\\\" class=\\\"disclaimer-container\\\"><p class=\\\"disclaimer-copy\\\">DISCLAIMER: We admit we know nothing about healthy dietary practices and overall food consumption. We also do not recommend you you use our service as a means to follow a strict diet without first consulting with your doctor. Any advice you find on our site does not consider prior existing medical conditions such as diabetes, heart-disease or any and all medical conditions. Our search results and advice is completely biased and in no way reflects any empirical or medical research or dietary expertise. You use this site at your own risk and in using it, agree to not hold us liable for any consquences from decisions made on your behalf as a results of using this website and/or service.</p><p class=\\\"disclaimer-copy\\\">Copyright 2016 - Blackhouse LLC.</p></div></section>\");\n$templateCache.put(\"app/views/partials/navbar.html\",\"<nav class=\\\"navbar\\\"><ul><li class=\\\"active nav-logo\\\"><a ng-href=\\\"#/\\\"><img src=\\\"../../.././assets/images/symbol-logo-5.png\\\"></a></li><li><a ng-href=\\\"#/\\\">Home</a></li><li><a ng-href=\\\"#/about\\\">About</a></li><li><a ng-href=\\\"#/contact\\\">Contact</a></li><li><a ng-href=\\\"#/disclaimer\\\">Disclaimer</a></li></ul></nav>\");\n$templateCache.put(\"app/views/partials/primary-search.html\",\"<div id=\\\"move-searchbar\\\" class=\\\"searchbar-container\\\"><input class=\\\"home-searchbar\\\" type=\\\"text\\\" ng-model=\\\"vm.searchterm\\\" ng-model-options=\\\"{debounce: 200}\\\" placeholder=\\\"Raw Oranges...\\\" ng-keyup=\\\"vm.handleKeyupEvent()\\\"> <img ng-click=\\\"vm.handleKeyupEvent()\\\" class=\\\"search-icon not-visible\\\" src=\\\"../../.././assets/images/search_icon_1.png\\\"></div><section class=\\\"search-results-container not-visible\\\"><ul ng-if=\\\"vm.items.length\\\" class=\\\"search-results-list\\\"><li ng-repeat=\\\"searchResult in vm.items\\\" ng-click=\\\"vm.goToSearchResult(searchResult.ndbno)\\\"><p class=\\\"result-name\\\">{{searchResult.name}}</p><p class=\\\"result-id\\\"><span>{{searchResult.group}}</span></p></li></ul></section><section class=\\\"paginator\\\"><ul ng-if=\\\"vm.pager.pages.length\\\"><li><a ng-click=\\\"vm.setPage(1, vm.searchresultsarray.length)\\\">First</a></li><li><a ng-click=\\\"vm.setPage(vm.pager.currentPage - 1, vm.searchresultsarray.length)\\\">Previous</a></li><li ng-repeat=\\\"page in vm.pager.pages\\\" ng-class=\\\"{paginatorActive:vm.pager.currentPage === page}\\\"><a ng-click=\\\"vm.setPage(page, vm.searchresultsarray.length)\\\">{{page}}</a></li><li><a ng-click=\\\"vm.setPage(vm.pager.currentPage + 1)\\\">Next</a></li><li><a ng-click=\\\"vm.setPage(vm.pager.totalPages)\\\">Last</a></li></ul><p ng-if=\\\"vm.pager.pages.length\\\">About <span>{{vm.totalResults}}</span> Total Search Results.<br>Page <span>{{vm.page}}</span> of <span>{{vm.pager.totalPages}}</span></p></section>\");}]);"],"sourceRoot":"/source/"}