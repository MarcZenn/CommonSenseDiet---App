{"version":3,"sources":["scripts/app-d03ec3c0d3.js"],"names":["angular","module","acmeNavbar","directive","restrict","templateUrl","controller","controllerAs","bindToController","includeFooter","NavbarController","moment","vm","this","relativeDate","creationDate","fromNow","$inject","MalarkeyController","$log","getFoodNamesOnly","activate","getFoodNamesList","then","info","log","data","foodnameslist","primarySearch","$document","$timeout","Paginator","linkFunc","scope","el","attr","initializeSearch","query","search","setPage","page","length","pager","totalPages","totalResults","getPaginator","items","searchresultsarray","slice","startIndex","endIndex","forEach","searchResult","name","split","replace","toLowerCase","charAt","toUpperCase","handleQueryInput","searchterm","$emit","link","acmeMalarkey","malarkey","typist","typeSpeed","deleteSpeed","pauseDelay","loop","postfix","addClass","extraValues","value","type","pause","watcher","$watch","list","item","foodName","$on","template","_","totalItems","currentPage","pageSize","startPage","endPage","Math","ceil","min","pages","range","service","factory","ONNAService","localStorageService","$q","ONNA","deferred","defer","isSupported","clearAll","set","checkONI","ONI","oniNutrient","report","food","nutrients","badNutrient","pointsDeducted","checkKcals","kCals","filter","key","unit","round","checkTransFats","transFats","checkSugar","sugar","checkFoodGroup","fg","evaluators","executeAsynchronously","functions","finalScore","HealthScore","i","call","theAnswer","resolve","reject","promise","callONNA","constant","apiUrl","apiKey","debug","mailgunSecretKey","mailgunPubKey","contactUsAddress","supportAddress","getSearchResults","$http","ENV_VARS","getSearchResultsList","returnSearchResultsList","response","getSearchResultsListFail","err","error","element","querySelector","removeClass","get","ndbApiUrl","ndbApiKey","getNutritionalData","getSearchResultNutritionData","id","returnNutritionalData","getNutritionalDataFail","getEnvVars","limit","returnFoodNamesList","getFoodNamesFail","determineEnvVars","vars","setEnvVars","contactUSAddres","getEnvVarsFail","SearchController","$scope","$location","$rootScope","errors","goToSearchResult","foodNutritionData","answer","path","MainController","classAnimation","cancel","Error404Controller","ContactController","processContactForm","returnSendSuccessful","message","sendFail","email","method","url","async","headers","Content-Type","AnswerController","stored","yesNoMaybe","nutrientGroups","proximates","minerals","vitamins","lipids","other","aminoAcids","getLocalStorageData","nutrient","group","runBlock","run","routeConfig","$routeProvider","when","otherwise","config","$logProvider","$httpProvider","localStorageServiceProvider","debugEnabled","defaults","useXDomain","common","setStorageType","$window","$templateCache","put"],"mappings":"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","file":"scripts/app-d03ec3c0d3.js","sourcesContent":["(function() {\n  'use strict';\n\n  // TODO:: Learn how to deploy this damn thing....(heroku & codeship)\n  // TODO:: HTTPS\n  // TODO:: Fix stupid underscore bower component 404 issue\n  // TODO:: if in production serve dist else serve src app.js - ugh\n  // TODO:: Add Google Analytics and Adsense - https://www.google.com/adsense/start/\n  // TODO:: move ONNA service to backend method.\n  // TODO:: How to account for a true 'serving-size' per food?????\n  // TODO:: write spec tests for all services, controllers and factories.\n  // TODO:: Make a list of beta testers and send invites.\n  // TODO:: 'variable-ize' css colors\n  // TODO:: You need to add your custom domain to send email from it. Your sandbox domain is only for testing purposes....\n  // TODO:: how to Incorporate serving size or add a maybe response or more layers?\n  // TODO:: Seek IP patent for algorithm once past beta testing.\n  // TODO:: Consider switching Food Data provider to these guys - https://www.labelinsight.com/developers/pricing or these guys http://platform.fatsecret.com/api/Default.aspx?screen=prem\n\n  angular\n    .module('commonSenseDietApp', ['ngCookies', 'ngTouch', 'ngSanitize', 'ngMessages', 'ngAria', 'ngResource', 'ngRoute', 'envconfig.module', 'underscore', 'LocalStorageModule']);\n\n})();\n\n(function() {\n  'use strict';\n  // This is a Directive...At a high level, directives are markers on a DOM element (such as an attribute, element name, comment or CSS class) that tell AngularJS's HTML compiler ($compile) to attach a specified behavior to that DOM element as well as default template behavior. See index.html to see the element where this directive is anchored. What does it mean to \"compile\" an HTML template? For AngularJS, \"compilation\" means attaching directives to the HTML to make it interactive. The reason we use the term \"compile\".\n\n  // To register a directive, you use the module.directive API.\n  angular\n    .module('commonSenseDietApp')\n    .directive('acmeNavbar', acmeNavbar);\n\n  /** @ngInject */\n  // Here we declare and define the Malarkey directive. malarkey is a library that came with the gulp generator. When you create a directive, it is restricted to attribute and elements only by default. In order to create directives that are triggered by class name, you need to use the restrict option. (restrict : E)\n  function acmeNavbar() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/views/partials/navbar.html',\n      controller: 'NavbarController',\n      controllerAs: 'vm',\n      bindToController: true\n    };\n\n    return directive;\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('commonSenseDietApp')\n    .directive('includeFooter', includeFooter);\n\n  /** @ngInject */\n  function includeFooter() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/views/partials/footer.html',\n      // controller: FooterController,\n      controllerAs: 'vm',\n      bindToController: true\n    };\n\n    return directive;\n  }\n})();\n\n(function() {\n  'use strict';\n\n  // Controllers are \"classes\" or \"constructor functions\" that are responsible for providing the application behavior that supports the declarative markup in the template. The recommended way of declaring Controllers is using the array notation. Unlike services, there can be many instances of the same type of controller in an application. Moreover, additional dependencies are made available to Controllers like $scope.\n    angular\n      .module('commonSenseDietApp')\n      .controller('NavbarController', NavbarController)\n\n      /** @ngInject */\n      function NavbarController(moment) {\n        // Using this pattern allows us to maintain a reference to the THIS scope as a means to 'reveal' public properties and methods for use as the 'view model'. It also has the added benefit of providing a lexical binding which can be referenced inside of closures.\n        var vm = this;\n\n        // \"vm.creation\" is avaible by directive option \"bindToController: true\"\n        vm.relativeDate = moment(vm.creationDate).fromNow();\n      }\n})();\n\n(function() {\n  'use strict';\n\n  // Controllers are \"classes\" or \"constructor functions\" that are responsible for providing the application behavior that supports the declarative markup in the template. The recommended way of declaring Controllers is using the array notation. Unlike services, there can be many instances of the same type of controller in an application. Moreover, additional dependencies are made available to Controllers like $scope.\n    angular\n      .module('commonSenseDietApp')\n      .controller('MalarkeyController', MalarkeyController)\n\n\n      /** @ngInject */\n      function MalarkeyController($log, getFoodNamesOnly) {\n        // Using this pattern allows us to maintain a reference to the THIS scope as a means to 'reveal' public properties and methods for use as the 'view model'. It also has the added benefit of providing a lexical binding which can be referenced inside of closures.\n        var vm = this;\n\n        vm.foodnameslist = [];\n\n        activate();\n\n        function activate() {\n          return getFoodNamesList().then(function() {\n            $log.info('Activated Foods List Typer');\n          })\n          .catch(function () {\n            $log.log('Promised Failed');\n          });\n        }\n\n        function getFoodNamesList() {\n          return getFoodNamesOnly.getFoodNamesList(20).then(function(data) {\n            vm.foodnameslist = data;\n\n            return vm.foodnameslist ;\n          })\n          .catch(function () {\n            $log.log('Promised Failed');\n          });\n        }\n      }\n\n})();\n\n(function() {\n  'use strict';\n\n  // This is a Directive...At a high level, directives are markers on a DOM element (such as an attribute, element name, comment or CSS class) that tell AngularJS's HTML compiler ($compile) to attach a specified behavior to that DOM element. See home.html to see the element where this directive is anchored. What does it mean to \"compile\" an HTML template? For AngularJS, \"compilation\" means attaching directives to the HTML to make it interactive.\n  angular\n    .module('commonSenseDietApp')\n    .directive('primarySearch', primarySearch);\n\n  /** @ngInject */\n  // Here we declare and define the Malarkey directive. Malarkey is an external non-angular JS library. It's set as a constant in index.constants.js. Installed via Bower.\n  function primarySearch($log, $document, $timeout, Paginator) {\n\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/views/components/primary-search.html',\n      link: linkFunc,\n      controller: 'SearchController',\n      controllerAs: 'vm',\n      bindToController: true // because the scope is isolated\n    };\n\n    return directive;\n\n    // Here we handle user inputting search query events and search initiation with pagination.\n    function linkFunc(scope, el, attr, vm) {\n      vm.pager = {};\n      vm.totalResults = 0;\n\n      vm.handleQueryInput = function() {\n        if(vm.searchterm && vm.searchterm.length >= 3) {\n          // Tell main.controller.js to update DOM\n          scope.$emit('updateDOM');\n          // Wait until search input value is defined and consider debounce before init search.\n          initializeSearch(vm.searchterm);\n        }\n      };\n\n      // Here we call our search method inside search.controller.js to access our API. When we init our search we first wait for our API results array to come in and use a callback to display our search results this we we make sure Nothing happens until after we finish our search query.\n      function initializeSearch(query) {\n\n        return vm.search(query).then(function() {\n          // Watch for the API data array to come in. Once defined, format it and make it available to the 'view-model'.\n          if(vm.searchresultsarray.length >= 1) {\n            angular.forEach(vm.searchresultsarray, function(searchResult) {\n              if (searchResult.name) {\n                searchResult.name = searchResult.name.split(/UPC:|gtin:/g)[0].replace(/\\,/g,\"\").toLowerCase();\n                searchResult.name = searchResult.name.charAt(0).toUpperCase() + searchResult.name.slice(1);\n              }\n            });\n            // Invoke pagination via \"setPage()\" function below. Once search results are in, display search results via Paginator service.\n            setPage(1, vm.searchresultsarray.length);\n\n          } else {\n\n            vm.searchresultsarray = [];\n          }\n\n          // Paginate search results using our Paginator.service.js and then render list to DOM.\n          function setPage(page, length) {\n            if(page < 1 || page > vm.pager.totalPages) {\n              return;\n            }\n            // total number of search results\n            vm.totalResults = length;\n            // current page\n            vm.page = page;\n            // get pager object from service\n            vm.pager = Paginator.getPaginator(length, page);\n            // get current page of items\n            vm.items =  vm.searchresultsarray.slice(vm.pager.startIndex, vm.pager.endIndex + 1);\n          }\n        })\n        .catch(function() {\n          $log.log(\"Promise Failed\");\n        });\n      }\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  // This is a Directive...At a high level, directives are markers on a DOM element (such as an attribute, element name, comment or CSS class) that tell AngularJS's HTML compiler ($compile) to attach a specified behavior to that DOM element. See home.html to see the element where this directive is anchored. What does it mean to \"compile\" an HTML template? For AngularJS, \"compilation\" means attaching directives to the HTML to make it interactive.\n  angular\n    .module('commonSenseDietApp')\n    .directive('acmeMalarkey', acmeMalarkey);\n\n  /** @ngInject */\n  // Here we declare and define the Malarkey directive. malarkey is a library that came with the gulp generator. I'm not exactly sure what it does yet but it's passed here to acmeMalarkey as an argument and used later on in linkFunc(). When you create a directive, it is restricted to attribute and elements only by default. In order to create directives that are triggered by class name, you need to use the restrict option. (restrict : E)\n  function acmeMalarkey(malarkey) {\n    var directive = {\n      restrict: 'E',\n      scope: {\n        extraValues: '='\n      },\n      template: '&nbsp;',\n      link: linkFunc,\n      controller: 'MalarkeyController',\n      controllerAs: 'vm',\n      bindToController: true // because the scope is isolated\n    };\n\n    return directive;\n\n    // Here we use the malarkey library to set typespeed animation. We also pass in el, attr,(not clear where these are defined yet), the scope object native to Angular, and vm wich is 'controller-as' syntax for the MalarkeyContoller defined in the directive.\n    function linkFunc(scope, el, attr, vm) {\n      var typist = malarkey(el[0], {\n        typeSpeed: 80,\n        deleteSpeed: 60,\n        pauseDelay: 4000,\n        loop: true,\n        postfix: ' '\n      });\n\n      // Here I believe we are setting our directive to a class selector as opposed to a template.\n      el.addClass('acme-malarkey');\n\n      // This iterates over extra food values specified in the directive as an attribute.\n      angular.forEach(vm.extraValues, function(value) {\n        typist.type(value).pause().delete();\n      });\n\n      // vm.foodnameslist is an array defined below in the MalarkeyController. Much like the forEach above, this one loops through the foodnameslist array (the data returned from our API service) and calls typist to animate the typing of each item on the home page. Notice it is not called until the $destroy event.\n      var watcher = scope.$watch('vm.foodnameslist', function() {\n        // vm.contributors will be undefined until $destroy.\n        if(!vm.foodnameslist.list) {\n          vm.foodnameslist.list = [];\n        }\n\n        angular.forEach(vm.foodnameslist.list.item, function(foodName) {\n          // TODO:: employ smarter string filtering..maybe lib or native helper\n          foodName = foodName.name.split('UPC')[0].replace(/\\,/g,\"\").toLowerCase();\n\n          typist.type(foodName).pause().delete();\n        });\n      });\n\n      // This calls the watcher() above when the destroy event is triggered. Removes the current scope (and all of its children) from the parent scope. Removal implies that calls to $digest() will no longer propagate to the current scope and its children. Removal also implies that the current scope is eligible for garbage collection.The $destroy() is usually used by directives such as ngRepeat for managing the unrolling of the loop. Just before a scope is destroyed, a $destroy event is broadcasted on this scope. Application code can register a $destroy event handler that will give it a chance to perform any necessary cleanup.\n      scope.$on('$destroy', function () {\n        watcher();\n      });\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('commonSenseDietApp')\n    .factory('Paginator', Paginator);\n\n  /** @ngInject */\n  // Angular services are substitutable objects that are wired together using dependency injection(DI). You can use services to organize and share code across your app via global templating.\n  function Paginator(_) {\n    // Service definition\n    var service = {\n      getPaginator: getPaginator\n    };\n\n    return service;\n\n    function getPaginator(totalItems, currentPage, pageSize) {\n\n      // Default to first page\n      currentPage = currentPage || 1;\n\n      // Default page size is 10\n      pageSize = pageSize || 10;\n\n      // Calculate total pages and instatiate empty variables.\n      var totalPages = Math.ceil(totalItems/pageSize);\n      var startPage;\n      var endPage;\n\n      if (totalPages <= 10 ) {\n        // Only show less than or exactly 10 if there are only 10 pages needed.\n        startPage = 1;\n        endPage = totalPages;\n      } else {\n        // Show more than 10 pages so calculate start and end pages\n        if (currentPage <= 6) {\n          startPage = 1;\n          endPage = 10;\n        } else if(currentPage + 4 >= totalPages) {\n          startPage = totalPages - 9;\n          endPage = totalPages;\n        } else {\n          startPage = currentPage - 5;\n          endPage = currentPage + 4;\n        }\n      }\n\n      // Calculate start and end item indexes\n      var startIndex = (currentPage - 1) * pageSize;\n      var endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\n\n      // Create an array of pages to ng-repeat in the pager controls\n      var pages = _.range(startPage, endPage + 1);\n\n      // Return object with all pager properties required by the view-model\n        return {\n            totalItems: totalItems,\n            currentPage: currentPage,\n            pageSize: pageSize,\n            totalPages: totalPages,\n            startPage: startPage,\n            endPage: endPage,\n            startIndex: startIndex,\n            endIndex: endIndex,\n            pages: pages\n        };\n\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('commonSenseDietApp')\n    .factory('ONNAService', ONNAService);\n\n  /** @ngInject */\n  /* This is ONNA, our (Optimal Nutrition Assurance Algorithm).\n   *\n   * This function is essentially a promise, is called from search.controller.js and what is  returned in the resolve is what gets access in the .then(). in search.controller.js. The steps are as follows.\n   *\n   *\n   * FIRST: clear current localStorage & sessionStorage\n   * SECOND: save food's nutritional data in sessionStorage\n   * THIRD: define 4 primary sync functions and call asynchronously via forEach(array)? while not violating the DRY principle. Thse 4 Primary functions evaluate nutrients, calories, trans-fats, total sugar & impact the Health Score accordingly.\n   * FOURTH: define 2 secondary sync functions and later call asynchronously via forEach(array)? while not violating the DRY principle. Thse 4 Primary functions evaluate nutrients, calories, trans-fats, total sugar & impact the Health Score accordingly.\n   * FIFTH: Place all primary layers into array.\n   * SIXTH: define a timeout to call JS sync functions asynchronously. Please not that while we reference service.HealthScore here we aren't actually updating it in any way.\n   * SEVENTH: call the timeout for asynchronous funcs.\n   * EIGHT: return promise as resolved or not.\n  */\n  function ONNAService($log,localStorageService, $q) {\n\n    // Service definition. Init Health Score, Calorie Spectrum, ONI & points deducted.\n    var service = {\n      theAnswer: '',\n      callONNA : ONNA,\n      HealthScore: 100,\n      pointsDeducted: 0,\n      ONI : ['Glucose (dextrose)', 'Cholesterol', 'Mercury', 'Sodium', 'Aspartic acid', 'Sucrose', 'Tocopherol, gamma', 'Vitamin E, added', 'Tocopherol, delta', 'Theobromine', 'Dihydrophylloquinone', 'Alcohol, ethyl','Maltose', 'Galactose', 'Fructose', 'Starch',\"Fatty acids, total trans-monoenoic\", \"Fatty acids, total trans-polyenoic\", 'Palm Oil', 'Yellow 5', 'Color Added', 'Lactic Acid', 'Corn syrup', 'Yellow 6', 'Blue 1']\n    };\n\n    return service;\n\n    function ONNA(data) {\n      // make into promise\n      var deferred = $q.defer();\n\n      if(data && localStorageService.isSupported) {\n        // FIRST step\n        localStorageService.clearAll();\n\n        // SECOND step\n        localStorageService.set('foodData', data);\n\n        // THIRD, step\n        var checkONI = function() {\n          service.ONI.forEach(function(oniNutrient) {\n            data.report.food.nutrients.forEach(function(badNutrient) {\n              if (oniNutrient == badNutrient.name) {\n                service.pointsDeducted += 1;\n                $log.log(oniNutrient);\n              }\n            });\n          });\n          $log.log(service.pointsDeducted + ' points lost due to dangerous nutrients');\n          return - service.pointsDeducted; // return number of points deducted.\n        }\n        var checkKcals = function() {\n          var kCals = data.report.food.nutrients.filter(function(key) {\n            if (key.name == 'Energy' && key.unit == 'kcal') {\n              return key.value;\n            }\n          });\n          if(kCals[0].value <= 99) {\n            // if total kCals is less than 3 digits long\n            service.pointsDeducted = 1;\n          } else if(kCals[0].value >= 100) {\n            // if total kCals is 3 digits or longer\n            service.pointsDeducted = Math.round(kCals[0].value / 100);\n          }\n          $log.log(service.pointsDeducted + ' points lost due to calories');\n          return - service.pointsDeducted;\n        }\n        var checkTransFats = function() {\n          var transFats = data.report.food.nutrients.filter(function(key) {\n            if (key.name == 'Fatty acids, total trans') {\n              return key.value;\n            }\n          });\n          if (transFats.length) {\n            service.pointsDeducted = transFats[0].value / .1 * 2;\n          } else {\n            service.pointsDeducted = 0;\n          }\n          $log.log(service.pointsDeducted + ' points lost due to trans fats');\n          return - service.pointsDeducted;\n        }\n        var checkSugar = function() {\n          var sugar = data.report.food.nutrients.filter(function(key) {\n            if (key.name == 'Sugars, total') {\n              return key.value;\n            }\n          });\n          if (sugar.length) {\n            service.pointsDeducted = sugar[0].value / 1 * 1.5;\n          } else {\n            service.pointsDeducted = 0;\n          }\n          $log.log(service.pointsDeducted + ' points lost due to sugar');\n          return - service.pointsDeducted;\n        }\n\n        // FOURTH step\n        var checkFoodGroup= function() {\n          if(data.report.food.fg == 'Sweets' || data.report.food.fg == 'Fast Foods') {\n            service.pointsDeducted = 10;\n          }\n          $log.log(service.pointsDeducted + ' points lost due to food group');\n          return - service.pointsDeducted;\n        }\n\n        // FIFTH step\n        var evaluators  = [checkONI, checkKcals, checkSugar, checkTransFats, checkFoodGroup];\n\n        // SIXTH step\n        var executeAsynchronously = function(functions) {\n          // Set newScore back to 100 everytime this function is called to avoid newScore being added on top of newScore when user chains searches together without refreshing.\n          var finalScore = service.HealthScore;\n\n          // get final health score\n          functions.forEach(function(i) {\n              finalScore = finalScore + i.call();\n          });\n\n          $log.log(finalScore);\n          // Set our final answer to true or false based on the final Health Score and save to sessionStorage.\n          if(finalScore && finalScore <= 69) {\n\n            service.theAnswer = 'NO';\n            localStorageService.set('answer', service.theAnswer);\n\n            // EIGHT step NO answer\n            deferred.resolve(service.theAnswer);\n\n          } else {\n\n            service.theAnswer = 'YES';\n            localStorageService.set('answer', service.theAnswer);\n\n            // EIGHT step YES answer\n            deferred.resolve(service.theAnswer);\n          }\n        }\n\n        // SEVENTH step\n        executeAsynchronously(evaluators);\n\n      } else if (!localStorageService.isSupported) {\n\n          // else if localStorage is not supported do some other stuff...\n          $log.log('local storage is not supported');\n\n          deferred.reject('local storage is not supported');\n      }\n\n      return deferred.promise;\n    }\n  }\n})();\n\nangular.module(\"envconfig.module\", [])\n.constant(\"ENV_VARS\", {\"apiUrl\":\"http://api.nal.usda.gov\",\"apiKey\":\"oSZ9f2ly7gkJo0A7fcRtd9z6AEGJaXIgPhNM6lhV\",\"debug\":\"true\",\"mailgunSecretKey\":\"key-2a15a5ba9bad709473d98208251b34ec\",\"mailgunPubKey\":\"pubkey-0b1ccc1dfd3e0b23ce23a3e5e6b1fd6b\",\"contactUsAddress\":\"marc.c.zenn@gmail.com\",\"supportAddress\":\"support@foodle.com\"});\n\n(function() {\n  'use strict';\n\n  // Application developers are free to define their own services by registering the service's name and service factory function, with an Angular module. This makes it available to the rest of the app.\n  angular\n    .module('commonSenseDietApp')\n    .factory('getSearchResults', getSearchResults);\n\n  /** @ngInject */\n  // Angular services are substitutable objects that are wired together using dependency injection(DI). You can use services to organize and share code across your app via global templating.\n  function getSearchResults($log, $http, $document, ENV_VARS) {\n\n    // Here we define a service and a method function and access our API variables from .env.\n    var service = {\n      ndbApiKey: ENV_VARS.apiKey,\n      ndbApiUrl: ENV_VARS.apiUrl,\n      getSearchResultsList: getSearchResultsList\n    }\n\n    return service;\n\n    // Here we define the service's main functionality. This is defined inside malarkey.directive.js as a integer which is also where this function gets invoked.\n    function getSearchResultsList(searchterm) {\n      // show loading spinner if API takeing a while.\n      angular.element($document[0].querySelector('.search-icon')).removeClass('not-visible');\n\n      // Here we hit the NDB search API using our .env variables but not without concatenating our searchterm query and our API key. We utilize an angular try-catch and depending on if successful or not we display error or return the data to search.contrller.js. For a list of all query parameters and settings visit - https://ndb.nal.usda.gov/ndb/doc/apilist/API-SEARCH.md\n      return $http.get(service.ndbApiUrl + '/ndb/search/?format=json&q=' + searchterm + '&sort=r&api_key=' + service.ndbApiKey)\n          .then(returnSearchResultsList)\n          .catch(getSearchResultsListFail);\n\n\n      function returnSearchResultsList(response) {\n        return response.data;\n      }\n\n      function getSearchResultsListFail(err) {\n        return $log.error(err.data);\n      }\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  // Application developers are free to define their own services by registering the service's name and service factory function, with an Angular module. This makes it available to the rest of the app.\n  angular\n    .module('commonSenseDietApp')\n    .factory('getNutritionalData', getNutritionalData);\n\n  /** @ngInject */\n  // Angular services are substitutable objects that are wired together using dependency injection(DI). You can use services to organize and share code across your app via global templating.\n  function getNutritionalData($log, $http, ENV_VARS) {\n\n    // Here we define a service and a method function and access our API variables from .env.\n    var service = {\n      ndbApiKey: ENV_VARS.apiKey,\n      ndbApiUrl: ENV_VARS.apiUrl,\n      getSearchResultNutritionData: getSearchResultNutritionData\n    }\n\n    return service;\n\n    // Here we define the service's main functionality. This is defined inside malarkey.directive.js as a integer which is also where this function gets invoked.\n    function getSearchResultNutritionData(id) {\n\n      // Here we hitting the NDB search API using our .env variables but not without concatenating our search query and our API key. We utilize an angular try-catch and depending on if successful or not we display error or return the data to search.contrller.js. For a list of all query parameters and settings visit - https://ndb.nal.usda.gov/ndb/doc/apilist/API-SEARCH.md\n      return $http.get(service.ndbApiUrl + '/ndb/reports/?ndbno=' + id + '&type=f&format=json&api_key=' + service.ndbApiKey)\n          .then(returnNutritionalData)\n          .catch(getNutritionalDataFail);\n\n      function returnNutritionalData(response) {\n        return response.data;\n      }\n\n      function getNutritionalDataFail(err) {\n        return $log.error(err.data);\n      }\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  // Application developers are free to define their own services by registering the service's name and service factory function, with an Angular module. This makes it available to the rest of the app.\n  angular\n    .module('commonSenseDietApp')\n    .factory('getFoodNamesOnly', getFoodNamesOnly);\n\n  /** @ngInject */\n  // Angular services are substitutable objects that are wired together using dependency injection(DI). You can use services to organize and share code across your app via global templating.\n  function getFoodNamesOnly($log, $http, ENV_VARS, getEnvVars) {\n\n    // Here we define a service and a method function and access our API variables from our .clientenv file.\n    var service = {\n      ndbApiKey: ENV_VARS.apiKey,\n      ndbApiUrl: ENV_VARS.apiUrl,\n      getFoodNamesList: getFoodNamesList\n    }\n\n    return service;\n\n    // Here we define the service's main functionality. Notice we pass in 'limit' as an argument. This is defined inside malarkey.directive.js as a integer which is also where this function gets invoked.\n    function getFoodNamesList(limit) {\n      // If no limit passed then just manually set limit to avoid undefined.\n      if(!limit) {\n        limit = 30;\n      }\n      \n      getEnvVars.determineEnvVars().then(function(vars) {\n        $log.log(vars);\n      });\n      // Here we calling the NDB Food List API using our .env variables but not without concatenating a limit integer and our API key. We utilize an angular try-catch and depending on if successful or not we display error getFoodNamesFail() or return data returnFoodNamesList() to malarkey.controller.js. For a list of all request parameters visit - https://ndb.nal.usda.gov/ndb/doc/apilist/API-LIST.md\n      return $http.get(service.ndbApiUrl + '/ndb/list?format=json&It=f' + '&max=' + limit + '&sort=n&offset=15&api_key=' + service.ndbApiKey)\n          .then(returnFoodNamesList)\n          .catch(getFoodNamesFail);\n\n\n      function returnFoodNamesList(response) {\n        return response.data;\n      }\n\n      function getFoodNamesFail(err) {\n        return $log.error(err.data);\n      }\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('commonSenseDietApp')\n    .factory('getEnvVars', getEnvVars);\n\n  /** @ngInject */\n  function getEnvVars($log, $http, ENV_VARS) {\n\n    var service = {\n      determineEnvVars : determineEnvVars\n    };\n\n\n    return service;\n\n    // Here we define the service's main functionality. Notice we pass in 'limit' as an argument. This is defined inside malarkey.directive.js as a integer which is also where this function gets invoked.\n    function determineEnvVars() {\n      // Determine the environment app is running in. Here we define a service and a method function and access our ENV variables from our .clientenv file.\n      return $http.get('api/get-env')\n          .then(setEnvVars)\n          .catch(getEnvVarsFail);\n\n      function setEnvVars(response) {\n        if(response.data == 'development') {\n          var service = {\n            ndbApiKey: ENV_VARS.apiKey,\n            ndbApiUrl: ENV_VARS.apiUrl,\n            debug: ENV_VARS.debug,\n            mailgunSecretKey: ENV_VARS.mailgunSecretKey,\n            mailgunPubKey: ENV_VARS.mailgunPubKey,\n            contactUSAddres: ENV_VARS.contactUsAddress,\n            supportAddress: ENV_VARS.supportAddress\n          }\n        } else {\n          // var service = {\n          //   ndbApiKey: response.data.apiKey,\n          //   ndbApiUrl: response.data.apiUrl\n          //   debug: response.data.debug,\n          //   mailgunSecretKey: response.data.mailgunSecretKey,\n          //   mailgunPubKey: response.data.mailgunPubKey,\n          //   contactUSAddres: response.data.contactUsAddress,\n          //   supportAddress: response.data.supportAddress\n          // }\n          var vars = response.data\n        }\n        return vars;\n      }\n\n      function getEnvVarsFail(err) {\n        return $log.error(err.data);\n      }\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  // Controllers are \"classes\" or \"constructor functions\" that are responsible for providing the application behavior that supports the declarative markup in the template. The recommended way of declaring Controllers is using the array notation. Unlike services, there can be many instances of the same type of controller in an application. Moreover, additional dependencies are made available to Controllers like $scope.\n  angular\n    .module('commonSenseDietApp')\n    .controller('SearchController', SearchController);\n\n\n  function SearchController($document, $scope, getSearchResults, $log, $location, $rootScope, getNutritionalData, ONNAService) {\n    // Using this pattern allows us to maintain a reference to the THIS scope as a means to 'reveal' public properties and methods for use as the 'view model'. It also has the added benefit of providing a lexical binding which can be referenced inside of closures!\n    var vm = this;\n\n    /* For Search Results List -\n     *\n     * Called from search.directive.js upon ngkeyup event. It will take the search query and init a new API call to get a list of foods based on the search query from the view input then return an array of our results attached to the \"view-model\" as vm.searchresultsarray.\n     */\n    vm.search = function(searchterm) {\n\n      return getSearchResults.getSearchResultsList(searchterm).then(function(data) {\n        // hide search load spinner\n        angular.element($document[0].querySelector('.loader')).addClass('not-visible');\n\n        if(data && data.list) {\n\n          vm.searchresultsarray = data.list.item;\n\n          return vm.searchresultsarray;\n\n        } else {\n\n          vm.searchresultsarray = data.errors.error;\n\n          return vm.searchresultsarray;\n        }\n      })\n      .catch(function () {\n        $log.log('Promised Failed');\n      });\n    }\n\n    /* For Nutritional Breakdown Page -\n     *\n     * This is a click event handler for the primary-search.html template (ngclick).   * When a search result is clicked on, it will take that result's ID (ndbno) and init a new API call to grab the rest of the nutritional data for that specific food. It then takes that data and passes it to our algorithm service/sessionStorage service which returns a promise with a 'yes', 'no', or 'mabye' string for answer.controller.js to use.\n     */\n     vm.goToSearchResult = function(id) {\n\n      vm.foodNutritionData = null;\n\n      return getNutritionalData.getSearchResultNutritionData(id).then(function(data) {\n\n        vm.foodNutritionData = data;\n\n        if (vm.foodNutritionData) {\n          // send data to service algorithm answer.service.js which will save the food's nutrition data to sessionStorage and return a promise.\n          ONNAService.callONNA(vm.foodNutritionData).then(function(answer) {\n            if(answer) {\n              // We initialize the AnswerController when we redirect to its page answer.html. That controller will handle building our answer page and displaying food data from sessionStorage.\n              return $location.path('answer');\n            }\n          })\n          .catch(function(error) {\n            $log.log(error);\n          });\n\n        } else {\n\n          $log.log(\"could not get food's nutrition data from API\");\n        }\n      })\n      .catch(function(error) {\n        $log.log(error);\n      });\n    }\n\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  // Controllers are \"classes\" or \"constructor functions\" that are responsible for providing the application behavior that supports the declarative markup in the template. The recommended way of declaring Controllers is using the array notation. Unlike services, there can be many instances of the same type of controller in an application. Moreover, additional dependencies are made available to Controllers like $scope.\n  angular\n    .module('commonSenseDietApp')\n    .controller('MainController', MainController);\n\n  /** @ngInject */\n  function MainController($timeout, $scope, $document) {\n    // Using this pattern allows us to maintain a reference to the THIS scope as a means to 'reveal' public properties and methods for use as the 'view model'. It also has the added benefit of providing a lexical binding which can be referenced inside of closures.\n    var vm = this;\n\n    vm.classAnimation = '';\n    vm.creationDate = 1450389822870;\n\n    activate();\n\n    function activate() {\n      $timeout(function() {\n        vm.classAnimation = 'pulse';\n      }, 100);\n    }\n\n    // Apply jqLite events to DOM selectors once directive alerts input value.\n    $scope.$on('updateDOM', function() {\n      angular.element($document[0].querySelector('#wrapper')).addClass('not-visible');\n      angular.element($document[0].querySelector('#move-searchbar')).removeClass('searchbar-container').addClass('global-searchbar-container');\n      angular.element($document[0].querySelector('.home-buttons')).addClass('not-visible');\n      angular.element($document[0].querySelector('.search-results-container')).removeClass('not-visible');\n      angular.element($document[0].querySelector('.navbar')).addClass('lightgrey-bg');\n      angular.element($document[0].querySelector('.navbar ul li p')).addClass('lightgrey-bg').addClass('not-visible');\n      angular.element($document[0].querySelector('.search-icon')).removeClass('not-visible');\n    })\n\n\n    $scope.$on('$destroy', function () {\n      $timeout.cancel(activate)\n    });\n  }\n})();\n\n(function() {\n  'use strict';\n\n  // Controllers are \"classes\" or \"constructor functions\" that are responsible for providing the application behavior that supports the declarative markup in the template. The recommended way of declaring Controllers is using the array notation. Unlike services, there can be many instances of the same type of controller in an application. Moreover, additional dependencies are made available to Controllers like $scope.\n  angular\n    .module('commonSenseDietApp')\n    .controller('Error404Controller', Error404Controller);\n\n\n  function Error404Controller(){\n    // Using this pattern allows us to maintain a reference to the THIS scope as a means to 'reveal' public properties and methods for use as the 'view model'. It also has the added benefit of providing a lexical binding which can be referenced inside of closures!\n    var vm = this;\n\n  }\n})();\n\n(function() {\n  'use strict';\n\n\tangular\n\t\t.module('commonSenseDietApp')\n\t\t.controller('ContactController', ContactController);\n\n\n\tfunction ContactController($http, $log) {\n\t\t// controllerAs syntax\n\t\tvar vm = this;\n\n    vm.processContactForm = function() {\n\n      var email = vm;\n\n      return $http({\n               method: 'POST',\n               url: '/api/submitContactUsForm',\n               async : true,\n               headers: {\n                 'Content-Type': 'application/json'\n               },\n               data: email\n              })\n              .then(returnSendSuccessful)\n              .catch(sendFail);\n\n      function returnSendSuccessful(response) {\n        return response.data.message\n      }\n\n      function sendFail(err) {\n        return $log.error(err.data);\n      }\n    }\n\n\n\t}\n\n})();\n\n(function() {\n  'use strict';\n\n  // Controllers are \"classes\" or \"constructor functions\" that are responsible for providing the application behavior that supports the declarative markup in the template. The recommended way of declaring Controllers is using the array notation. Unlike services, there can be many instances of the same type of controller in an application. Moreover, additional dependencies are made available to Controllers like $scope.\n  angular\n    .module('commonSenseDietApp')\n    .controller('AnswerController', AnswerController);\n\n\n  function AnswerController($log, localStorageService){\n    // Using this pattern allows us to maintain a reference to the THIS scope as a means to 'reveal' public properties and methods for use as the 'view model'. It also has the added benefit of providing a lexical binding which can be referenced inside of closures!\n    var vm = this;\n\n    // Table of nutrients data report from NDB API\n    vm.stored;\n    vm.yesNoMaybe;\n\n    // Chosen table of contents sub-category groups. There are more but not all foods have every one but these in NDB.\n    vm.nutrientGroups = {\n      proximates: false,\n      minerals: false,\n      vitamins: false,\n      lipids: false,\n      other: false,\n      aminoAcids: false\n    }\n\n    // This gets called from the search.controller.js $rootScope listener and loads local storage data once and once only which is when the init click event occurs. The function below reloads the data once you're already on the page and happen to refresh.\n    vm.getLocalStorageData = function() {\n      // Retrieve data that answer.service.js saved into sessionStorage\n      if(localStorageService.get('foodData') && localStorageService.get('answer')) {\n        // Hold the entire report in vm.stored. Hold final answer in vm.yesNoMaybe.\n        vm.stored = localStorageService.get('foodData');\n        vm.yesNoMaybe = localStorageService.get('answer').split(/UPC:|gtin:/g)[0].replace(/\\,/g,\"\").toLowerCase();\n\n        // Check to see if chosen nutrient groups have nutrients listed under them aka exist in the data. If so then display in view.\n        vm.stored.report.food.nutrients.forEach(function(nutrient) {\n          switch (nutrient.group) {\n            case \"Proximates\":\n              vm.nutrientGroups.proximates = true;\n              break;\n            case \"Minerals\":\n              vm.nutrientGroups.minerals = true;\n              break;\n            case \"Vitamins\":\n              vm.nutrientGroups.vitamins = true;\n              break;\n            case \"Lipids\":\n              vm.nutrientGroups.lipids = true;\n              break;\n            case \"Other\":\n              vm.nutrientGroups.other = true;\n              break;\n            case \"Amino Acids\":\n              vm.nutrientGroups.aminoAcids = true;\n              break;\n            default:\n              break;\n          }\n        });\n\n      } else {\n\n        $log.log('No data in localStorage or sessionStorage!');\n      }\n    };\n\n    vm.getLocalStorageData();\n  }\n})();\n\n(function() {\n  'use strict';\n\n  // We can specify functions (Module Methods) to run at configuration and run time for a module by calling the config and run methods. These functions are injectable with dependencies(DI).\n  angular\n    .module('commonSenseDietApp')\n    .run(runBlock);\n\n  /** @ngInject */\n  function runBlock($log) {\n\n    $log.debug('runBlock end');\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('commonSenseDietApp')\n    .config(routeConfig);\n\n  function routeConfig($routeProvider) {\n    // Home Page\n    $routeProvider\n    .when('/', {\n      templateUrl: 'app/views/pages/home.html',\n      controller: 'MainController',\n      controllerAs: 'vm'\n    })\n    .otherwise({\n      controller: 'Error404Controller',\n      templateUrl: 'app/views/errors/404.html'\n    });\n\n    // About Page\n    $routeProvider\n    .when('/about', {\n      templateUrl: 'app/views/static/about.html'\n    })\n    .otherwise({\n      controller: 'Error404Controller',\n      templateUrl: 'app/views/errors/404.html'\n    });\n\n    // Terms of Use Page\n    $routeProvider\n    .when('/terms-of-use', {\n      templateUrl: 'app/views/static/terms-of-use.html'\n    })\n    .otherwise({\n      controller: 'Error404Controller',\n      templateUrl: 'app/views/errors/404.html'\n    });\n\n    // Privacy Policy Page\n    $routeProvider\n    .when('/privacy-policy', {\n      templateUrl: 'app/views/static/privacy-policy.html'\n    })\n    .otherwise({\n      controller: 'Error404Controller',\n      templateUrl: 'app/views/errors/404.html'\n    });\n\n    // Contact Us Page\n    $routeProvider\n    .when('/contact', {\n      templateUrl: 'app/views/pages/contact.html',\n      controller: 'ContactController',\n      controllerAs: 'vm'\n    })\n    .otherwise({\n      controller: 'Error404Controller',\n      templateUrl: 'app/views/errors/404.html'\n    });\n\n    // Answer Page\n    $routeProvider\n    .when('/answer', {\n      templateUrl: 'app/views/pages/answer.html',\n      controller: 'AnswerController',\n      controllerAs: 'vm'\n    })\n    .otherwise({\n      controller: 'Error404Controller',\n      templateUrl: 'app/views/errors/404.html'\n    });\n\n    // How It Works Page\n    $routeProvider\n    .when('/how-it-works', {\n      templateUrl: 'app/views/static/how-it-works.html'\n    })\n    .otherwise({\n      controller: 'Error404Controller',\n      templateUrl: 'app/views/errors/404.html'\n    });\n\n    // Algorithm Explainer Page\n    $routeProvider\n    .when('/meet-ONNA', {\n      templateUrl: 'app/views/static/meet-ONNA.html'\n    })\n    .otherwise({\n      controller: 'Error404Controller',\n      templateUrl: 'app/views/errors/404.html'\n    });\n  }\n})();\n\n/*\n   global malarkey:false,\n   moment:false\n*/\n(function() {\n  'use strict';\n\n  angular\n    .module('commonSenseDietApp')\n    .constant('malarkey', malarkey)\n    .constant('moment', moment)\n\n})();\n\n(function() {\n  'use strict';\n\n  // We can specify functions (Module Methods) to run at configuration and run time for a module by calling the config and run methods. These functions are injectable with dependencies(DI).\n  angular\n    .module('commonSenseDietApp')\n    .config(config);\n\n  /** @ngInject */\n  function config($logProvider, $httpProvider, localStorageServiceProvider) {\n    // Enable log\n    $logProvider.debugEnabled(true);\n\n    // For Access-Control-Allow-Origin and Set-Cookie header\n    $httpProvider.defaults.useXDomain = true;\n    $httpProvider.defaults.headers.common = 'Content-Type: application/json';\n    delete $httpProvider.defaults.headers.common['X-Requested-With'];\n\n    // Set local storage to use session storage and broadcast to $rootScope for setItem and removeItem\n    localStorageServiceProvider.setStorageType('sessionStorage');\n    // localStorageServiceProvider.setNotify(true, true);\n    // localStorageServiceProvider.setPrefix('yourAppName');\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('underscore', [])\n    .factory('_', _)\n\n    function _($window) {\n      return $window._;\n    }\n\n})();\n\nangular.module(\"commonSenseDietApp\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/views/components/primary-search.html\",\"<div class=\\\"loader not-visible\\\">Loading...</div><div id=\\\"move-searchbar\\\" class=\\\"searchbar-container\\\"><input class=\\\"home-searchbar\\\" type=\\\"text\\\" ng-model=\\\"vm.searchterm\\\" ng-model-options=\\\"{debounce: 200}\\\" placeholder=\\\"Raw Oranges...\\\" ng-change=\\\"vm.handleQueryInput()\\\"> <img ng-click=\\\"vm.handleQueryInput()\\\" class=\\\"search-icon not-visible\\\" src=\\\"../../.././assets/images/search_icon_1.png\\\"></div><section class=\\\"search-results-container not-visible\\\"><ul ng-if=\\\"vm.items.length > 1\\\" class=\\\"search-results-list\\\"><li ng-repeat=\\\"searchResult in vm.items\\\" ng-click=\\\"vm.goToSearchResult(searchResult.ndbno)\\\"><p class=\\\"result-name\\\">{{searchResult.name}}</p><p class=\\\"result-id\\\"><span>{{searchResult.group}}</span></p></li></ul><ul ng-if=\\\"vm.items[0].message\\\" class=\\\"no-search-results\\\"><li><p class=\\\"result-name\\\">{{ vm.items[0].message }}</p></li></ul></section><section class=\\\"paginator\\\"><ul ng-if=\\\"vm.pager.pages.length\\\"><li><a ng-click=\\\"vm.setPage(1, vm.searchresultsarray.length)\\\">First</a></li><li><a ng-click=\\\"vm.setPage(vm.pager.currentPage - 1, vm.searchresultsarray.length)\\\">Previous</a></li><li ng-repeat=\\\"page in vm.pager.pages\\\" ng-class=\\\"{paginatorActive:vm.pager.currentPage === page}\\\"><a ng-click=\\\"vm.setPage(page, vm.searchresultsarray.length)\\\">{{page}}</a></li><li><a ng-click=\\\"vm.setPage(vm.pager.currentPage + 1)\\\">Next</a></li><li><a ng-click=\\\"vm.setPage(vm.pager.totalPages)\\\">Last</a></li></ul><p ng-if=\\\"vm.pager.pages.length\\\">About <span>{{vm.totalResults}}</span> Total Search Results.<br>Page <span>{{vm.page}}</span> of <span>{{vm.pager.totalPages}}</span></p></section>\");\n$templateCache.put(\"app/views/errors/404.html\",\"<section class=\\\"text-center\\\"><p>This Page Does Not Exist.</p></section>\");\n$templateCache.put(\"app/views/pages/answer.html\",\"<section class=\\\"answer-content\\\"><div class=\\\"the-answer text-center {{ vm.yesNoMaybe == \\'yes\\' ? \\'green\\' : \\'orange\\' }}\\\"><span class=\\\"{{ vm.yesNoMaybe == \\'yes\\' ? \\'orange\\' : \\'green\\' }}\\\">{{ vm.stored.report.food.name }}</span><h1>{{ vm.yesNoMaybe }}!</h1></div><div class=\\\"table-of-nutrients-wrapper\\\"><h2>Table of Nutrients</h2><ul><li ng-if=\\\"vm.stored.report.food.fg\\\" class=\\\"dashboardbox\\\"><label>Food Group<p>{{vm.stored.report.food.fg}}</p></label></li><li ng-if=\\\"vm.stored.report.food.sn\\\" class=\\\"dashboardbox\\\"><label>Scientific Name<p>{{vm.stored.report.food.sn}}</p></label></li><li ng-if=\\\"vm.stored.report.food.manu\\\" class=\\\"dashboardbox\\\"><label>Manufacturer<p>{{vm.stored.report.food.manu}}</p></label></li><li ng-if=\\\"vm.stored.report.food.cn\\\" class=\\\"dashboardbox\\\"><label>Commercial Name<p>{{vm.stored.report.food.cn}}</p></label></li><li ng-if=\\\"vm.stored.report.food.ff\\\" class=\\\"dashboardbox\\\"><label>Fat Factor<p>{{vm.stored.report.food.ff}}</p></label></li><li ng-if=\\\"vm.stored.report.food.pf\\\" class=\\\"dashboardbox\\\"><label>Protein Factor<p>{{vm.stored.report.food.pf}}</p></label></li><li ng-if=\\\"vm.stored.report.food.cf\\\" class=\\\"dashboardbox\\\"><label>Carbohydrate Factor<p>{{vm.stored.report.food.cf}}</p></label></li><li ng-if=\\\"vm.stored.report.food.r\\\" class=\\\"dashboardbox\\\"><label>Refuse Percentage<p>{{vm.stored.report.food.r}}</p></label></li><li ng-if=\\\"vm.stored.report.food.rd\\\" class=\\\"dashboardbox\\\"><label>Refuse Description<p>{{vm.stored.report.food.rd}}</p></label></li><li ng-if=\\\"vm.stored.report.food.sd\\\" class=\\\"dashboardbox\\\"><label>Short Description<p>{{vm.stored.report.food.sd}}</p></label></li></ul><span>Information provided by food manufacturers is label data. Manufacturers are responsible for descriptions, nutrient data and ingredient information. USDA calculated nutrient values and weights are for every 100 grams of<p>{{ vm.stored.report.food.name }}</p></span><table class=\\\"table-of-nutrients\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\"><thead><tr><th>Nutrient</th><th>For Every 100 Grams of<br>{{ vm.stored.report.food.name }}..</th><th ng-repeat=\\\"measure in vm.stored.report.food.nutrients[0].measures\\\">{{ measure.label }} <span ng-if=\\\"measure.eqv\\\">{{ measure.eqv }}g</span></th></tr></thead><tbody><tr><td ng-if=\\\"vm.nutrientGroups.proximates\\\" class=\\\"table-of-nutrients-subheader\\\" colspan=\\\"100\\\">Proximates</td></tr><tr ng-repeat=\\\"nutrient in vm.stored.report.food.nutrients\\\"><td ng-if=\\\"nutrient.group == \\'Proximates\\'\\\">{{ nutrient.name }}</td><td ng-if=\\\"nutrient.group == \\'Proximates\\'\\\">{{ nutrient.value }} {{ nutrient.unit }}</td><td ng-if=\\\"nutrient.group == \\'Proximates\\' && vm.stored.report.food.nutrients[0].measures.length >= 1\\\" ng-repeat=\\\"measure in nutrient.measures\\\">{{ measure.value }}</td></tr><tr><td ng-if=\\\"vm.nutrientGroups.minerals\\\" class=\\\"table-of-nutrients-subheader\\\" colspan=\\\"100\\\">Minerals</td></tr><tr ng-repeat=\\\"nutrient in vm.stored.report.food.nutrients\\\"><td ng-if=\\\"nutrient.group == \\'Minerals\\'\\\">{{ nutrient.name }}</td><td ng-if=\\\"nutrient.group == \\'Minerals\\'\\\">{{ nutrient.value }} {{ nutrient.unit }}</td><td ng-if=\\\"nutrient.group == \\'Minerals\\' && vm.stored.report.food.nutrients[0].measures.length >= 1\\\" ng-repeat=\\\"measure in nutrient.measures\\\">{{ measure.value }}</td></tr><tr><td ng-if=\\\"vm.nutrientGroups.vitamins\\\" class=\\\"table-of-nutrients-subheader\\\" colspan=\\\"100\\\">Vitamins</td></tr><tr ng-repeat=\\\"nutrient in vm.stored.report.food.nutrients\\\"><td ng-if=\\\"nutrient.group == \\'Vitamins\\'\\\">{{ nutrient.name }}</td><td ng-if=\\\"nutrient.group == \\'Vitamins\\'\\\">{{ nutrient.value }} {{ nutrient.unit }}</td><td ng-if=\\\"nutrient.group == \\'Vitamins\\' && vm.stored.report.food.nutrients[0].measures.length >= 1\\\" ng-repeat=\\\"measure in nutrient.measures\\\">{{ measure.value }}</td></tr><tr><td ng-if=\\\"vm.nutrientGroups.lipids\\\" class=\\\"table-of-nutrients-subheader\\\" colspan=\\\"100\\\">Lipids</td></tr><tr ng-repeat=\\\"nutrient in vm.stored.report.food.nutrients\\\"><td ng-if=\\\"nutrient.group == \\'Lipids\\'\\\">{{ nutrient.name }}</td><td ng-if=\\\"nutrient.group == \\'Lipids\\'\\\">{{ nutrient.value }} {{ nutrient.unit }}</td><td ng-if=\\\"nutrient.group == \\'Lipids\\' && vm.stored.report.food.nutrients[0].measures.length >= 1\\\" ng-repeat=\\\"measure in nutrient.measures\\\">{{ measure.value }}</td></tr><tr><td ng-if=\\\"vm.nutrientGroups.aminoAcids\\\" class=\\\"table-of-nutrients-subheader\\\" colspan=\\\"100\\\">Amino Acids</td></tr><tr ng-repeat=\\\"nutrient in vm.stored.report.food.nutrients\\\"><td ng-if=\\\"nutrient.group == \\'Amino Acids\\'\\\">{{ nutrient.name }}</td><td ng-if=\\\"nutrient.group == \\'Amino Acids\\'\\\">{{ nutrient.value }} {{ nutrient.unit }}</td><td ng-if=\\\"nutrient.group == \\'Amino Acids\\' && vm.stored.report.food.nutrients[0].measures.length >= 1\\\" ng-repeat=\\\"measure in nutrient.measures\\\">{{ measure.value }}</td></tr><tr><td ng-if=\\\"vm.nutrientGroups.other\\\" class=\\\"table-of-nutrients-subheader\\\" colspan=\\\"100\\\">Other</td></tr><tr ng-repeat=\\\"nutrient in vm.stored.report.food.nutrients\\\"><td ng-if=\\\"nutrient.group == \\'Other\\'\\\">{{ nutrient.name }}</td><td ng-if=\\\"nutrient.group == \\'Other\\'\\\">{{ nutrient.value }} {{ nutrient.unit }}</td><td ng-if=\\\"nutrient.group == \\'Other\\' && vm.stored.report.food.nutrients[0].measures.length >= 1\\\" ng-repeat=\\\"measure in nutrient.measures\\\">{{ measure.value }}</td></tr></tbody></table></div></section><section class=\\\"text-center\\\"><h1>Place Huge Banner Ad Here :)</h1></section><section class=\\\"sources-of-data-wrapper\\\" ng-if=\\\"vm.stored.report.sources.length\\\"><h3>Sources of Data</h3><ul><li ng-repeat=\\\"source in vm.stored.report.sources\\\"><p>{{source.authors}}, <strong>{{source.title}}</strong> {{source.year}}, {{source.vol}}, {{source.iss}}</p></li></ul></section><include-footer></include-footer>\");\n$templateCache.put(\"app/views/pages/contact.html\",\"<section><div class=\\\"contact-us-title\\\"><h1>Got a Question? Suggestion? Speculation?</h1></div><form class=\\\"contact-us-form\\\" name=\\\"contactUsForm\\\" ng-submit=\\\"vm.processContactForm()\\\"><div class=\\\"form-group\\\"><input placeholder=\\\"name\\\" type=\\\"text\\\" name=\\\"name\\\" ng-model=\\\"vm.name\\\" class=\\\"form-control\\\" required=\\\"\\\"> <span class=\\\"label label-danger\\\" ng-show=\\\"vm.submitted && contact-us-form.name.$error.required\\\">Required!</span></div><div class=\\\"form-group\\\"><input placeholder=\\\"Email\\\" type=\\\"email\\\" name=\\\"email\\\" ng-model=\\\"vm.email\\\" class=\\\"form-control\\\" required=\\\"\\\"> <span class=\\\"label label-danger\\\" ng-show=\\\"vm.submitted && contact-us-form.email.$error.required\\\">Required!</span> <span class=\\\"label label-danger\\\" ng-show=\\\"vm.submitted && contact-us-form.$error.email\\\">Invalid email!</span></div><div class=\\\"form-group\\\"><input name=\\\"headline\\\" placeholder=\\\"Headline\\\" type=\\\"text\\\" ng-model=\\\"vm.headline\\\" class=\\\"form-control\\\" required=\\\"\\\"> <span class=\\\"label label-danger\\\" ng-show=\\\"vm.submitted && contact-us-form.headline.$error.required\\\">Required!</span></div><div class=\\\"form-group\\\"><textarea name=\\\"message\\\" placeholder=\\\"Message\\\" type=\\\"textbox\\\" ng-model=\\\"vm.message\\\" class=\\\"form-control\\\" required=\\\"\\\"></textarea> <span class=\\\"label label-danger\\\" ng-show=\\\"vm.submitted && contact-us-form.subjectList.$error.required\\\">Required!</span></div><input type=\\\"submit\\\" id=\\\"submit-contact-form-btn\\\"></form></section><include-footer></include-footer>\");\n$templateCache.put(\"app/views/pages/home.html\",\"<section class=\\\"home-container\\\"><div id=\\\"wrapper\\\" class=\\\"jumbotron\\\"><div class=\\\"header-container\\\"><ul class=\\\"header-list\\\"><li class=\\\"header\\\"><img src=\\\"../../../assets/images/text-logo-7.png\\\"></li><li><p class=\\\"sub-header\\\">A simple, yes or no response to the question. Is<acme-malarkey extra-values=\\\"[\\'agave\\', \\'olive oil\\', \\'whole milk\\']\\\"></acme-malarkey>good for me?</p></li><ul></ul></ul></div></div><primary-search></primary-search><div class=\\\"home-buttons\\\"><div class=\\\"animated infinite\\\" ng-class=\\\"vm.classAnimation\\\"><a ng-click=\\\"vm.handleKeyupEvent()\\\" class=\\\"btn btn-lg btn-success\\\">SEARCH</a></div><div class=\\\"animated infinite\\\" ng-class=\\\"vm.classAnimation\\\"><a class=\\\"btn btn-lg btn-success\\\" href=\\\"#/about\\\">UH..</a></div></div></section>\");\n$templateCache.put(\"app/views/pages/submitNewFood.html\",\"<section class=\\\"new-food-content\\\"><div class=\\\"submit-new-food-title\\\"><h1>Submit a New Food</h1><p>Before submitting a food be sure to search for it first!<br>We might already have it in our database.</p></div><form class=\\\"submit-food-form\\\" ng-submit=\\\"newFood.submitFood()\\\"><input placeholder=\\\"Food Name\\\" ,=\\\"\\\" type=\\\"text\\\" class=\\\"name-input\\\" ng-model=\\\"newFood.formData.foodName\\\"> <input placeholder=\\\"Food ID\\\" ,=\\\"\\\" type=\\\"text\\\" class=\\\"id-input\\\" ng-model=\\\"newFood.formData.foodId\\\"> <input placeholder=\\\"Food Group\\\" ,=\\\"\\\" type=\\\"text\\\" class=\\\"food-group-input\\\" ng-model=\\\"newFood.formData.foodGroup\\\"> <input placeholder=\\\"Yes, No or Maybe\\\" ,=\\\"\\\" type=\\\"text\\\" class=\\\"answer-input\\\" ng-model=\\\"newFood.formData.answer\\\"> <input placeholder=\\\"Reason Why\\\" ,=\\\"\\\" type=\\\"text\\\" class=\\\"carbs-input\\\" ng-model=\\\"newFood.formData.reasoning\\\"> <input placeholder=\\\"serving size\\\" ,=\\\"\\\" type=\\\"number\\\" class=\\\"serving-size-input\\\" ng-model=\\\"newFood.formData.servingSize\\\"> <input placeholder=\\\"calories\\\" ,=\\\"\\\" type=\\\"number\\\" class=\\\"name-input\\\" ng-model=\\\"newFood.formData.calories\\\"> <input placeholder=\\\"total fat\\\" ,=\\\"\\\" type=\\\"number\\\" class=\\\"total-fat-input\\\" ng-model=\\\"newFood.formData.totalFat\\\"> <input placeholder=\\\"Trans Fat\\\" ,=\\\"\\\" type=\\\"number\\\" class=\\\"trans-fat-input\\\" ng-model=\\\"newFood.formData.transFat\\\"> <input placeholder=\\\"saturated fat\\\" ,=\\\"\\\" type=\\\"number\\\" class=\\\"saturated-fat-input\\\" ng-model=\\\"newFood.formData.saturatedFat\\\"> <input placeholder=\\\"cholesterol\\\" ,=\\\"\\\" type=\\\"number\\\" class=\\\"cholesterol-input\\\" ng-model=\\\"newFood.formData.cholesterol\\\"> <input placeholder=\\\"protein\\\" ,=\\\"\\\" type=\\\"number\\\" class=\\\"protein-input\\\" ng-model=\\\"newFood.formData.protein\\\"> <input placeholder=\\\"sodium\\\" ,=\\\"\\\" type=\\\"number\\\" class=\\\"sodium-input\\\" ng-model=\\\"newFood.formData.sodium\\\"> <input placeholder=\\\"carbohydrates\\\" ,=\\\"\\\" type=\\\"number\\\" class=\\\"carbs-input\\\" ng-model=\\\"newFood.formData.carbs\\\"> <input placeholder=\\\"sugar\\\" ,=\\\"\\\" type=\\\"number\\\" class=\\\"sugar-input\\\" ng-model=\\\"newFood.formData.sugar\\\"> <input placeholder=\\\"fiber\\\" ,=\\\"\\\" type=\\\"number\\\" class=\\\"fiber-input\\\" ng-model=\\\"newFood.formData.fiber\\\"> <input type=\\\"checkbox\\\" value=\\\"vegetarian\\\" ng-model=\\\"newFood.formData.vegetarian\\\"> vegetarian <input type=\\\"checkbox\\\" value=\\\"gluten-free\\\" ng-model=\\\"newFood.formData.glutenFree\\\"> gluten free <input type=\\\"checkbox\\\" value=\\\"vegan\\\" ng-model=\\\"newFood.formData.vegan\\\"> vegan <input type=\\\"checkbox\\\" value=\\\"nut-free\\\" ng-model=\\\"newFood.formData.nutFree\\\"> nut free <input type=\\\"submit\\\" id=\\\"submit-new-food-btn\\\"></form></section>\");\n$templateCache.put(\"app/views/partials/footer.html\",\"<section class=\\\"footer-content\\\"><div class=\\\"footer-nav-container\\\"><ul class=\\\"footer-nav-list\\\"><li><a ng-href=\\\"#/\\\">home</a></li><li><a ng-href=\\\"#/about\\\">about</a></li><li><a ng-href=\\\"#/contact\\\">contact us</a></li><li><a ng-href=\\\"#/privacy-policy\\\">privacy policy</a></li><li><a ng-href=\\\"#/how-it-works\\\">how it works</a></li><li><a ng-href=\\\"#/terms-of-use\\\">terms of use</a></li><li><a ng-href=\\\"#/meet-ONNA\\\">ONNA</a></li></ul></div><div id=\\\"scrolled-to\\\" class=\\\"disclaimer-container\\\"><p class=\\\"disclaimer-copy\\\">DISCLAIMER: We admit we know nothing about healthy dietary practices and overall food consumption. We also do not recommend you you use our service as a means to follow a strict diet without first consulting with your doctor. Any advice you find on our site does not consider prior existing medical conditions such as diabetes, heart-disease or any and all medical conditions. Our search results and advice is completely biased and in no way reflects any empirical or medical research or dietary expertise. You use this site at your own risk and in using it, agree to not hold us liable for any consquences from decisions made on your behalf as a results of using this website and/or service.</p><p class=\\\"disclaimer-copy\\\">Copyright 2016 - Blackhouse LLC.</p></div></section>\");\n$templateCache.put(\"app/views/partials/navbar.html\",\"<nav class=\\\"navbar\\\"><ul><li class=\\\"active nav-logo\\\"><a ng-href=\\\"#/\\\"><img src=\\\"../../.././assets/images/symbol-logo-6.png\\\"></a><p>In <span>ALPHA</span> since: {{ vm.relativeDate }}.</p></li><li><a ng-href=\\\"#/about\\\">About</a></li><li><a ng-href=\\\"#/how-it-works\\\">How It Works</a></li></ul></nav>\");\n$templateCache.put(\"app/views/static/about.html\",\"<section class=\\\"about-content\\\"><div class=\\\"about-copy-container\\\"><h1 class=\\\"about-header\\\">Eating Healthy is <span class=\\\"highlight\\\">Simple</span>...Right?</h1><p class=\\\"about-copy\\\">We\\'ve all heard of the Atkins diet and the Paleo diet and the raw foods diet and the blood type diet and the cigarette diet and the baby food diet and the WWII rations diet but come on! Hasn\\'t it all gotten just a bit too riduculous? What in the world happened to common sense? <span class=\\\"highlight\\\">Since when did eating healthy become so complicated?</span></p><p class=\\\"about-copy\\\">We created Foodle because we believe that you don\\'t need a crazy diet fad to eat healthy. We believe that eating well and keeping your diet in check shouldn\\'t be rocket science. Here on Foodle, you can simply search a food, beverage or meal and get a <span>YES!</span> or <span>NO!</span> response. That\\'s it! Is a cheeseburger good for you? <span>NO!</span> Is an apple good for you? <span>YES!</span><br></p><p class=\\\"about-copy\\\">See how easy that is? Some might call it common sense...but then again common sense isn\\'t so common is it? Why follow some crazy, \\\"out-of-the-box\\\" diet fad you can\\'t stick to anyways? Before you eat something, just <span class=\\\"highlight\\\">Foodle</span> it.</p><br><a href=\\\"#/how-it-works\\\" class=\\\"btn primary-cta-btn\\\">See How It All Works</a></div></section><include-footer></include-footer>\");\n$templateCache.put(\"app/views/static/how-it-works.html\",\"<section class=\\\"how-it-works-content\\\"><div class=\\\"how-it-works-copy-container\\\"><h1 class=\\\"how-it-works-header\\\">How It Works</h1><div class=\\\"how-it-works-section\\\"><h2 class=\\\"how-it-works-subheader\\\">It\\'s All About The Health Score:</h2><p class=\\\"how-it-works-copy\\\">Every food and beverage in our database, also known as the <a href=\\\"https://ndb.nal.usda.gov/ndb/\\\">USDA Food Composition Databases</a>, once searched, is assigned a <span class=\\\"highlight\\\">Health Score</span>. The maximum Health Score for any food is 100 points which represents the healthiest item you could eat. In fact, every food starts off with 100 total Health Score points before encountering our algorithm, humbly named, the <span class=\\\"highlight\\\">Optimal Nutrition Assurance Algorithm</span>, or <span class=\\\"highlight\\\">ONAA</span> for short.</p><br><p class=\\\"how-it-works-copy\\\">Ultimately, it is ONAA\\'s job to account for total nutrients, minerals, vitamins, calories, trans-fats, and sugars for any given food or beverage, and adjust the Health Score accordingly. A Health Score of 100 points indicates the healthiest possible food you could eat while a Health Score of 1 point represents the worst possible food you could eat. Any Health Score below 69 points will result in a big fat <span class=\\\"highlight-red\\\">NO</span> for that food/beverage when searched. Such is the importance of the <span class=\\\"highlight\\\">Health Score</span>.</p><br><p class=\\\"how-it-works-copy\\\">If you\\'d like to learn more about ONNA and how it determines what you should eat, and not eat, you can check out our explainer page <a href=\\\"#/meet-ONNA\\\">here</a>.</p><i class=\\\"em em-clap\\\"></i></div></div></section><include-footer></include-footer>\");\n$templateCache.put(\"app/views/static/meet-ONNA.html\",\"<section class=\\\"how-it-works-content\\\"><div class=\\\"how-it-works-copy-container\\\"><h1 class=\\\"how-it-works-header\\\">This Is How the <span class=\\\"highlight\\\">Magic</span> Happens.</h1><div class=\\\"how-it-works-section\\\"><p class=\\\"how-it-works-copy\\\">Much like your everyday onion, <a href=\\\"http://www.jonnybowden.com/onions-a-real-superfood/\\\">which is super healthy for you and widely regarded as a super food!</a>, our <span class=\\\"highlight\\\">Optimal Nutrition Assurance Algorithm (ONAA),</span> has layers. She\\'s complicated. But don\\'t worry. It helps to think of each \\\"layer\\\" as one of ONAA\\'s primary functions. There are in fact 4 primary layers and 1 secondary layer. Each one of the primary layers will deal with either the nutrients, calories, sugars, or fat content per food and ultimately come up with a \\\"Health Score\\\" per food. We\\'ll walk you through every one of ONAA\\'s layers and discover the role each one plays in helping to evaluate a given food as something you should eat...or not eat, depending on the final \\\"Health Score\\\".</p></div><div class=\\\"how-it-works-section\\\"><h2 class=\\\"how-it-works-subheader\\\"><span class=\\\"highlight\\\">Layer 1:</span> You Are What Your Food Is:</h2><p class=\\\"how-it-works-copy\\\">ONAA\\'s first layer, one of its 4 primary functions, is considered to be one of the most informative layers in terms of evaluating harmful nutrients for a given food. As such, this layer affects the overall Health Score greatly and accounts for 25% of the maximum 100 Health Score points a food can receive. To be more precise, ONAA\\'s goal here is to identify several of the most harmful and unhealthy nutrients, ingredients, minerals, vitamins, acids, additives, substances, proteins, GMO\\'s etc. per food and adjust that food\\'s Health Score accordingly. To do this it relies on our <span class=\\\"highlight\\\">Optimal Nutrition Index</span>, or <span class=\\\"highlight\\\">ONI</span> for short, which you can read more about <a href=\\\"#\\\">here</a>. So why does ONAA need to rely on ONI to adjust a food\\'s Health Score?</p><br><p class=\\\"how-it-works-copy\\\">Basically you can think of ONI as a list of the most harmful substances a food could have. It is continously changing, improving and growing.</p></div><div class=\\\"how-it-works-section\\\"><h2 class=\\\"how-it-works-subheader\\\"><span class=\\\"highlight\\\">Layer 2:</span> Watch Those Calories Baby:</h2><p class=\\\"how-it-works-copy\\\">Next we have to consider the amount of calories (measured in kcals) for every 100 grams of a given food. 100 grams is what ONAA deems as <span class=\\\"highlight\\\">one serving</span>, which is equal to roughly half a pound, of any given food. If we take the daily recommended calorie intake for most people worldwide across all ages, <span class=\\\"highlight\\\">2500 kcals</span><a href=\\\"https://www.cnpp.usda.gov/sites/default/files/usda_food_patterns/EstimatedCalorieNeedsPerDayTable.pdf\\\">*</a>, and our food\\'s total kcals per serving, ONAA can use these two data points to tell how many servings of that food you can eat before reaching the daily recommended calorie limit and conditionally remove points from the overall Health Score of that food. The whole idea here is that the more of something you can eat without exceeding your recommended calorie intake, the healthier it is for you! So how does ONAA actually calculate the number of points to assign?</p><table class=\\\"calories-spectrum-table\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\"><thead><tr><th>Calories Per Serving (kcals/100g)</th><th>Points Lost</th></tr></thead><tbody><tr><td>0 - 100 kcals</td><td>1</td></tr><tr><td>101 - 200 kcals</td><td>2</td></tr><tr><td>201 - 300 kcals</td><td>3</td></tr><tr><td>301 - 400 kcals</td><td>4</td></tr><tr><td>401 - 500 kcals</td><td>5</td></tr><tr><td>501 - 600 kcals</td><td>6</td></tr><tr><td>601 - 700 kcals</td><td>7</td></tr><tr><td>701 - 800 kcals</td><td>8</td></tr><tr><td>801 - 900 kcals</td><td>9</td></tr><tr><td>901 - 1000 kcals</td><td>10</td></tr><tr><td>1101 - 1200 kcals</td><td>11</td></tr><tr><td>1201 - 1300 kcals</td><td>12</td></tr><tr><td>1301 - 1400 kcals</td><td>13</td></tr><tr><td>1401 - 1500 kcals</td><td>14</td></tr><tr><td>1501 - 1600 kcals</td><td>15</td></tr><tr><td>1601 - 1700 kcals</td><td>16</td></tr><tr><td>1701 - 1800 kcals</td><td>17</td></tr><tr><td>1801 - 1900 kcals</td><td>18</td></tr><tr><td>1901 - 2000 kcals</td><td>19</td></tr><tr><td>2001 - 2100 kcals</td><td>20</td></tr><tr><td>2101 - 2200 kcals</td><td>21</td></tr><tr><td>2201 - 2300 kcals</td><td>22</td></tr><tr><td>2301 - 2400 kcals</td><td>23</td></tr><tr><td>2401 - 2500 kcals</td><td>24</td></tr><tr><td>> 2500 kcals</td><td>25</td></tr></tbody></table></div><div class=\\\"how-it-works-section\\\"><h2 class=\\\"how-it-works-subheader\\\"><span class=\\\"highlight\\\">Layer 3:</span> Remember Jump Rope for Heart?:</h2><p class=\\\"how-it-works-copy\\\">According to the American Heart Association: <span class=\\\"highlight\\\">\\\"You should limit the amount of trans-fats to less than 1 percent of your total daily calories. That means if you need about 2,000 calories a day, less than 20 calories (or 2 grams) should come from trans fats\\\"</span>. For our purposes ONAA will use 2500 calories a day which means the maximum recommended limit for trans-fats is 2.5 grams a day.</p><br><p class=\\\"how-it-works-copy\\\">It\\'s important to note that trans-fats are really, really, really bad for you. As the Mayo clinic puts it, <span class=\\\"highlight\\\">\\\"Trans fat is considered by many doctors to be the worst type of fat you can eat. Unlike other dietary fats, trans fat — also called trans-fatty acids — both raises your LDL (\\\"bad\\\") cholesterol and lowers your HDL (\\\"good\\\") cholesterol.\\\"</span>. Which basically means even the most minute amount of trans-fat should be avoided.</p></div><div class=\\\"how-it-works-section\\\"><h2 class=\\\"how-it-works-subheader\\\"><span class=\\\"highlight\\\">Layer 4:</span> Yes, Sugar Love is in Your DNA:</h2><p class=\\\"how-it-works-copy\\\">In the 2015, the <span class=\\\"highlight\\\">World Health Organization,</span> cut the recommended sugar intake for adults in half from the original 10 percent of total daily calories to five percent. For a normal weight adult, that\\'s about 25 grams, or 6 teaspoons, per day. This is because when it comes to sugar, one could make the case that it\\'s just as bad for you as trans-fats regardless of wether you\\'re talking about Fructose or Sucrose<a href=\\\"http://well.blogs.nytimes.com/2016/06/08/is-sugar-really-bad-for-you-it-depends/\\\">*</a>. Thus, as far as we\\'re concerned, sugar intake must be highly limited especially when you consider that only half a can of soda would put most men and women past their daily recommended sugar limit.</p></div><div class=\\\"how-it-works-section\\\"><h2 class=\\\"how-it-works-subheader\\\"><span class=\\\"highlight\\\">Layer 5:</span> ONNA\\'s Hierarchy of Food Needs:</h2><p class=\\\"how-it-works-copy\\\">Remember that silly food group pyramid we used to study in elementary school? Well as it turns out, it\\'s not as useless as we all thought! ONNA\\'s fifth layer is regarded as one of it\\'s least informative functions in terms of evaluating how healthy a given food is to consume. As such, this layer affects the overall Health Score very little and accounts for only 5 bonus points on top of the maximum 100 Health Score points a food can receive. Currently the United States Department of Agriculture recognizes 25 distinct food groups. While most of these food groups don\\'t really indicate how healthy any of the foods that fall under it are, there are a few groups that we can confidently identify as mostly unhealthy. Those groups, as recognized by the United States Department of Agriculture, are the \\\"Fast Foods\\\" group and \\\"Sweets\\\" group.</p></div></div></section><include-footer></include-footer>\");\n$templateCache.put(\"app/views/static/privacy-policy.html\",\"<section class=\\\"privacy-policy-content\\\"><div class=\\\"privacy-policy-container\\\"><h1 class=\\\"privacy-policy-header\\\">Privacy Policy</h1><p class=\\\"privacy-policy-copy\\\">This privacy policy discloses the privacy practices for Foodle.com, commonSenseDietApp. This privacy policy applies solely to information collected by this web site and certain third parties mentioned here after. It will notify you of the following:</p><ul class=\\\"privacy-policy-copy-list\\\"><li><p class=\\\"privacy-policy-copy\\\">What personally identifiable information is collected from you through the web site, how it is used and with whom it may be shared.</p></li><li><p class=\\\"privacy-policy-copy\\\">What choices are available to you regarding the use of your data.</p></li><li><p class=\\\"privacy-policy-copy\\\">The security procedures in place to protect the misuse of your information.</p></li></ul><h2 class=\\\"privacy-policy-subheader\\\">Information Collection, Use, and Sharing</h2><p class=\\\"privacy-policy-copy\\\">We are the sole owners of any information collected from you via this site. We only have access to collect information that you voluntarily give us via email or other direct contact from you. We will not sell or rent this information to anyone at anytime under any circumstances unless upon receiving a valid request from you to release your data only and your data only.</p><p class=\\\"privacy-policy-copy\\\">We are the sole owners of any information collected from you via this site. Currently we only have access to collect information that you voluntarily give us via email or other direct contact from you. We will not sell, rent give or show this information to anyone at anytime under any circumstances unless upon receiving a valid request from you to release your data only and your data only. Be aware that although we do not collect any data from you at this time we do employ third-party technologies and work with third-party vendors that may use cookies to serve ads based on a user\\'s prior visits. This is discussed in further detail below.</p><p class=\\\"privacy-policy-copy\\\">We will use your information to respond to you, regarding the reason you contacted us. We will not share your information with any third party outside of our organization, other than as necessary to fulfill your request, e.g. to ship an order or answer a suppor ticket.</p><p class=\\\"privacy-policy-copy\\\">Unless you ask us not to, we may contact you via email (only if you have provided us your email before by contacting us) in the future to tell you about specials, new products or services, or changes to this privacy policy.</p><h2 class=\\\"privacy-policy-subheader\\\">Your Access to and Control Over Information</h2><p class=\\\"privacy-policy-copy\\\">You may opt out of any future contacts from us at any time. You can do the following at any time by contacting us via the contact form on our website:</p><ul class=\\\"privacy-policy-copy-list\\\"><li><p class=\\\"privacy-policy-copy\\\">See what data we have about you, if any.</p></li><li><p class=\\\"privacy-policy-copy\\\">Change/correct any data we have about you.</p></li><li><p class=\\\"privacy-policy-copy\\\">Have us delete any data we have about you.</p></li><li><p class=\\\"privacy-policy-copy\\\">Express any concern you have about our use of your data</p></li></ul><h2 class=\\\"privacy-policy-subheader\\\">Security</h2><p class=\\\"privacy-policy-copy\\\">We take precautions to protect your information. When you submit sensitive information via the website, your information is protected both online and offline.</p><p class=\\\"privacy-policy-copy\\\">Wherever we collect sensitive information (such as credit card data or email addresses), that information is encrypted and transmitted to us in a secure way. You can verify this by looking for a closed lock icon at the bottom of your web browser, or by looking for \\\"https\\\" at the beginning of the address URL of our web page.</p><p class=\\\"privacy-policy-copy\\\">While we use encryption to protect sensitive information transmitted online, we also protect your information offline. Only employees who need the information to perform a specific job (for example, billing or customer service) are granted access to personally identifiable information. The computers/servers in which we store personally identifiable information are kept in a secure environment.</p><h2 class=\\\"privacy-policy-subheader\\\">Cookies and Third-Party Vendors</h2><p class=\\\"privacy-policy-copy\\\">We work with third-party vendors that use \\\"cookies\\\" on this site (mainly Google). A cookie is a piece of data stored on a site visitor\\'s hard drive to help improve access to the site and identify repeat visits. Cookies can enable sites to track and target the interests of users to enhance their site experience. Usage of these cookie is in no way linked to any personally identifiable information about you, the user. Third party vendors, including Google, use cookies on this website to serve ads based on our users\\' prior visits to this site or other websites. Google\\'s use of advertising cookies enables it and its partners to serve ads to your users based on their visit to your sites and/or other sites on the Internet. Users may opt out of personalized advertising by visiting <a href=\\\"https://www.google.com/settings/u/0/ads/authenticated\\\">Ad Settings</a>. Alternatively users can opt out of a third-party vendor\\'s use of cookies for personalized advertising by visiting <a href=\\\"www.aboutads.info\\\">www.aboutads.info</a>.</p><h2 class=\\\"privacy-policy-subheader\\\">Links</h2><p class=\\\"privacy-policy-copy\\\">This web site contains links to other sites. Please be aware that we are not responsible for the content or privacy practices of such other sites. We encourage our users to be aware when they leave our site and to read the privacy statements of any other site that collects personally identifiable information.</p></div></section><include-footer></include-footer>\");\n$templateCache.put(\"app/views/static/terms-of-use.html\",\"<section class=\\\"terms-of-use-content\\\"><div class=\\\"terms-of-use-copy-container\\\"><h1 class=\\\"terms-of-use-header\\\">Terms of Use</h1><p class=\\\"terms-of-use-copy\\\">Blackhouse LLC, by providing this website, domain and all associated properties, assets, trademarks, and services, collectively referenced from here on as \\\"Blackhouse LLC\\\", is not making any assurances, guaranties, or warranties as to the safeness or riskiness of the information presented on this website or any actions, consequences, results, claims or inferences derived from content presented on this website.</p><br><p class=\\\"terms-of-use-copy\\\">You acknowledge that by visiting and/or using and/or referring this website you are aware that Blackhouse LLC knows nothing about healthy dietary practices and overall food consumption. You agree that Blackhouse LLC is not recommending the use of this webite and it\\'s content as a means to follow a nutritional diet. Any information or conclusions you gather from our site does not consider prior existing medical conditions such as diabetes, heart-disease or any and all medical conditions and will not be regarded as such. Our search results and advice is completely biased and in no way reflects medical research or dietary expertise. You use this site at your own risk and in using it, agree to not hold us liable for any consquences from decisions made on your behalf as a results of using this website and/or service.</p><br><p class=\\\"terms-of-use-copy\\\">This website is provided for informational purposes only and is not comparable to other information or services provided by medical, governmental or scientific authorities such as the United States Food &amp; Drug Administration. The content on this website is not tailored to each individual User and therefore may fail to account for your individual preferences, risk-tolerances, allergies, or health conditions. This website does not provide medical and/or dietary advice and should not be used as such. This website does not predict or assure healthy eating choices or practices. Each User should do his or her due diligence prior to using this website and may also wish to consult a nutritional expert or doctor.</p></div></section><include-footer></include-footer>\");}]);"],"sourceRoot":"/source/"}